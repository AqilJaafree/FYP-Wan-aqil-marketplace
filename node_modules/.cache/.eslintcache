[{"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\index.js":"1","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\reportWebVitals.js":"2","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\App.js":"3","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\Marketplace.js":"4","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\Profile.js":"5","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTpage.js":"6","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\SellNFT.js":"7","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\Navbar.js":"8","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\utils.js":"9","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\pinata.js":"10","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTTile.js":"11","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\index.js":"12","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\App.js":"13","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\reportWebVitals.js":"14","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\SellNFT.js":"15","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\Marketplace.js":"16","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\Profile.js":"17","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTpage.js":"18","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\Navbar.js":"19","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\pinata.js":"20","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\utils.js":"21","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTTile.js":"22","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\index.js":"23","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\App.js":"24","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\reportWebVitals.js":"25","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\SellNFT.js":"26","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\Profile.js":"27","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\Marketplace.js":"28","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\NFTpage.js":"29","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\Navbar.js":"30","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\NFTTile.js":"31","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\pinata.js":"32","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\utils.js":"33","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\Search.js":"34","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\SearchTile.js":"35","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\Recent.js":"36"},{"size":1120,"mtime":1690641599748,"results":"37","hashOfConfig":"38"},{"size":375,"mtime":1690641599750,"results":"39","hashOfConfig":"38"},{"size":770,"mtime":1690641599731,"results":"40","hashOfConfig":"38"},{"size":3340,"mtime":1691328052899,"results":"41","hashOfConfig":"38"},{"size":3312,"mtime":1691339521133,"results":"42","hashOfConfig":"38"},{"size":4227,"mtime":1691340815469,"results":"43","hashOfConfig":"38"},{"size":7065,"mtime":1691336335916,"results":"44","hashOfConfig":"38"},{"size":4342,"mtime":1691293541867,"results":"45","hashOfConfig":"38"},{"size":222,"mtime":1690641599754,"results":"46","hashOfConfig":"38"},{"size":2674,"mtime":1691339828325,"results":"47","hashOfConfig":"38"},{"size":978,"mtime":1691326285929,"results":"48","hashOfConfig":"38"},{"size":1120,"mtime":1690641599748,"results":"49","hashOfConfig":"50"},{"size":770,"mtime":1690641599731,"results":"51","hashOfConfig":"50"},{"size":375,"mtime":1690641599750,"results":"52","hashOfConfig":"50"},{"size":7065,"mtime":1691336335916,"results":"53","hashOfConfig":"50"},{"size":3340,"mtime":1691328052899,"results":"54","hashOfConfig":"50"},{"size":3312,"mtime":1691339521133,"results":"55","hashOfConfig":"50"},{"size":4227,"mtime":1691340815469,"results":"56","hashOfConfig":"50"},{"size":4342,"mtime":1691293541867,"results":"57","hashOfConfig":"50"},{"size":2674,"mtime":1691339828325,"results":"58","hashOfConfig":"50"},{"size":222,"mtime":1690641599754,"results":"59","hashOfConfig":"50"},{"size":978,"mtime":1691326285929,"results":"60","hashOfConfig":"50"},{"size":1310,"mtime":1691362332640,"results":"61","hashOfConfig":"62"},{"size":946,"mtime":1691363694390,"results":"63","hashOfConfig":"62"},{"size":375,"mtime":1690641599750,"results":"64","hashOfConfig":"62"},{"size":7065,"mtime":1691336335916,"results":"65","hashOfConfig":"62"},{"size":3312,"mtime":1691339521133,"results":"66","hashOfConfig":"62"},{"size":3340,"mtime":1691361901868,"results":"67","hashOfConfig":"62"},{"size":4218,"mtime":1691363861247,"results":"68","hashOfConfig":"62"},{"size":5493,"mtime":1691362257540,"results":"69","hashOfConfig":"62"},{"size":951,"mtime":1691363743029,"results":"70","hashOfConfig":"62"},{"size":2674,"mtime":1691339828325,"results":"71","hashOfConfig":"62"},{"size":222,"mtime":1690641599754,"results":"72","hashOfConfig":"62"},{"size":4660,"mtime":1691363518946,"results":"73","hashOfConfig":"62"},{"size":825,"mtime":1691359299034,"results":"74","hashOfConfig":"62"},{"size":3914,"mtime":1691362959664,"results":"75","hashOfConfig":"62"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},"10chrzw",{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11xqxce",{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},"17h9bnb",{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"158"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"158"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\index.js",["195"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport SellNFT from './components/SellNFT';\r\nimport Marketplace from './components/Marketplace';\r\nimport Profile from './components/Profile';\r\nimport NFTPage from './components/NFTpage';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Marketplace />}/>\r\n        <Route path=\"/sellNFT\" element={<SellNFT />}/> \r\n        <Route path=\"/nftPage/:tokenId\" element={<NFTPage />}/>        \r\n        <Route path=\"/profile\" element={<Profile />}/> \r\n      </Routes>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",[],"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\reportWebVitals.js",[],[],"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\App.js",["196","197","198"],[],"import './App.css';\r\nimport Navbar from './components/Navbar.js';\r\nimport Marketplace from './components/Marketplace';\r\nimport Profile from './components/Profile';\r\nimport SellNFT from './components/SellNFT';\r\nimport NFTPage from './components/NFTpage';\r\nimport ReactDOM from \"react-dom/client\";\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Marketplace />}/>\r\n          <Route path=\"/nftPage\" element={<NFTPage />}/>        \r\n          <Route path=\"/profile\" element={<Profile />}/>\r\n          <Route path=\"/sellNFT\" element={<SellNFT />}/>             \r\n        </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\Marketplace.js",[],[],"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\Profile.js",["199","200"],[],"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTpage.js",["201","202","203","204"],[],"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\SellNFT.js",["205"],[],"import Navbar from \"./Navbar\";\r\nimport { useState } from \"react\";\r\nimport { uploadFileToIPFS, uploadJSONToIPFS } from \"../pinata\";\r\nimport Marketplace from \"../Marketplace.json\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nexport default function SellNFT() {\r\n  const [formParams, updateFormParams] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n  });\r\n  const [fileURL, setFileURL] = useState(null);\r\n  const ethers = require(\"ethers\");\r\n  const [message, updateMessage] = useState(\"\");\r\n  const location = useLocation();\r\n\r\n  async function disableButton() {\r\n    const listButton = document.getElementById(\"list-button\");\r\n    listButton.disabled = true;\r\n    listButton.style.backgroundColor = \"grey\";\r\n    listButton.style.opacity = 0.3;\r\n  }\r\n\r\n  async function enableButton() {\r\n    const listButton = document.getElementById(\"list-button\");\r\n    listButton.disabled = false;\r\n    listButton.style.backgroundColor = \"#A500FF\";\r\n    listButton.style.opacity = 1;\r\n  }\r\n\r\n  //This function uploads the NFT image to IPFS\r\n  async function OnChangeFile(e) {\r\n    var file = e.target.files[0];\r\n    //check for file extension\r\n    try {\r\n      //upload the file to IPFS\r\n      disableButton();\r\n      updateMessage(\"Uploading image.. please dont click anything!\");\r\n      const response = await uploadFileToIPFS(file);\r\n      if (response.success === true) {\r\n        enableButton();\r\n        updateMessage(\"\");\r\n        console.log(\"Uploaded image to Pinata: \", response.pinataURL);\r\n        setFileURL(response.pinataURL);\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Error during file upload\", e);\r\n    }\r\n  }\r\n\r\n  //This function uploads the metadata to IPFS\r\n  async function uploadMetadataToIPFS() {\r\n    const { name, description, price } = formParams;\r\n    //Make sure that none of the fields are empty\r\n    if (!name || !description || !price || !fileURL) {\r\n      updateMessage(\"Please fill all the fields!\");\r\n      return -1;\r\n    }\r\n\r\n    const nftJSON = {\r\n      name,\r\n      description,\r\n      price,\r\n      image: fileURL,\r\n    };\r\n\r\n    try {\r\n      //upload the metadata JSON to IPFS\r\n      const response = await uploadJSONToIPFS(nftJSON);\r\n      if (response.success === true) {\r\n        console.log(\"Uploaded JSON to Pinata: \", response);\r\n        return response.pinataURL;\r\n      }\r\n    } catch (e) {\r\n      console.log(\"error uploading JSON metadata:\", e);\r\n    }\r\n  }\r\n\r\n  async function listNFT(e) {\r\n    e.preventDefault();\r\n\r\n    //Upload data to IPFS\r\n    try {\r\n      const metadataURL = await uploadMetadataToIPFS();\r\n      if (metadataURL === -1) return;\r\n      //After adding your Hardhat network to your metamask, this code will get providers and signers\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner();\r\n      disableButton();\r\n      updateMessage(\r\n        \"Uploading NFT(takes 5 mins).. please dont click anything!\"\r\n      );\r\n\r\n      //Pull the deployed contract instance\r\n      let contract = new ethers.Contract(\r\n        Marketplace.address,\r\n        Marketplace.abi,\r\n        signer\r\n      );\r\n\r\n      //massage the params to be sent to the create NFT request\r\n      const price = ethers.utils.parseUnits(formParams.price, \"ether\");\r\n      let listingPrice = await contract.getListPrice();\r\n      listingPrice = listingPrice.toString();\r\n\r\n      //actually create the NFT\r\n      let transaction = await contract.createToken(metadataURL, price, {\r\n        value: listingPrice,\r\n      });\r\n      await transaction.wait();\r\n\r\n      alert(\"Successfully listed your NFT!\");\r\n      enableButton();\r\n      updateMessage(\"\");\r\n      updateFormParams({ name: \"\", description: \"\", price: \"\" });\r\n      window.location.replace(\"/\");\r\n    } catch (e) {\r\n      alert(\"Upload error\" + e);\r\n    }\r\n  }\r\n\r\n  console.log(\"Working\", process.env);\r\n  return (\r\n    <div className=\"\">\r\n      <Navbar></Navbar>\r\n      <div className=\"flex flex-col place-items-center mt-10\" id=\"nftForm\">\r\n        <form className=\"bg-white shadow-md rounded px-8 pt-4 pb-8 mb-4\">\r\n          <h3 className=\"text-center font-bold text-purple-500 mb-8\">\r\n            Upload your NFT to the marketplace\r\n          </h3>\r\n          <div className=\"mb-4\">\r\n            <label\r\n              className=\"block text-purple-500 text-sm font-bold mb-2\"\r\n              htmlFor=\"name\"\r\n            >\r\n              NFT Name\r\n            </label>\r\n            <input\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Axie#4563\"\r\n              onChange={(e) =>\r\n                updateFormParams({ ...formParams, name: e.target.value })\r\n              }\r\n              value={formParams.name}\r\n            ></input>\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <label\r\n              className=\"block text-purple-500 text-sm font-bold mb-2\"\r\n              htmlFor=\"description\"\r\n            >\r\n              NFT Description\r\n            </label>\r\n            <textarea\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n              cols=\"40\"\r\n              rows=\"5\"\r\n              id=\"description\"\r\n              type=\"text\"\r\n              placeholder=\"Axie Infinity Collection\"\r\n              value={formParams.description}\r\n              onChange={(e) =>\r\n                updateFormParams({ ...formParams, description: e.target.value })\r\n              }\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <label\r\n              className=\"block text-purple-500 text-sm font-bold mb-2\"\r\n              htmlFor=\"price\"\r\n            >\r\n              Price (in ETH)\r\n            </label>\r\n            <input\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n              type=\"number\"\r\n              placeholder=\"Min 0.01 ETH\"\r\n              step=\"0.01\"\r\n              value={formParams.price}\r\n              onChange={(e) =>\r\n                updateFormParams({ ...formParams, price: e.target.value })\r\n              }\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label\r\n              className=\"block text-purple-500 text-sm font-bold mb-2\"\r\n              htmlFor=\"image\"\r\n            >\r\n              Upload Image (&lt;500 KB)\r\n            </label>\r\n            <input type={\"file\"} onChange={OnChangeFile}></input>\r\n          </div>\r\n          <br></br>\r\n          <div className=\"text-red-500 text-center\">{message}</div>\r\n          <button\r\n            onClick={listNFT}\r\n            className=\"font-bold mt-10 w-full bg-purple-500 text-white rounded p-2 shadow-lg\"\r\n            id=\"list-button\"\r\n          >\r\n            List NFT\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\Navbar.js",["206","207","208","209","210","211","212","213"],[],"import logo from '../logo_3.png';\r\nimport fullLogo from '../full_logo.png';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nfunction Navbar() {\r\n\r\nconst [connected, toggleConnect] = useState(false);\r\nconst location = useLocation();\r\nconst [currAddress, updateAddress] = useState('0x');\r\n\r\nasync function getAddress() {\r\n  const ethers = require(\"ethers\");\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const addr = await signer.getAddress();\r\n  updateAddress(addr);\r\n}\r\n\r\nfunction updateButton() {\r\n  const ethereumButton = document.querySelector(\".enableEthereumButton\");\r\n  ethereumButton.textContent = \"Connected\";\r\n  ethereumButton.classList.remove(\"hover:bg-blue-70\");\r\n  ethereumButton.classList.remove(\"bg-blue-500\");\r\n  ethereumButton.classList.add(\"hover:bg-green-70\");\r\n  ethereumButton.classList.add(\"bg-green-500\");\r\n}\r\n\r\nasync function connectWebsite() {\r\n  const chainId = await window.ethereum.request({ method: \"eth_chainId\" });\r\n  if (chainId !== \"0xaa36a7\") {\r\n    //alert('Incorrect network! Switch your metamask network to Rinkeby');\r\n    await window.ethereum.request({\r\n      method: \"wallet_switchEthereumChain\",\r\n      params: [{ chainId: \"0xaa36a7\" }],\r\n    });\r\n  }\r\n  await window.ethereum.request({ method: \"eth_requestAccounts\" }).then(() => {\r\n    updateButton();\r\n    console.log(\"here\");\r\n    getAddress();\r\n    window.location.replace(location.pathname);\r\n  });\r\n}\r\n\r\nuseEffect(() => {\r\n  if (window.ethereum == undefined) return;\r\n  let val = window.ethereum.isConnected();\r\n  if (val) {\r\n    console.log(\"here\");\r\n    getAddress();\r\n    toggleConnect(val);\r\n    updateButton();\r\n  }\r\n\r\n  window.ethereum.on(\"accountsChanged\", function (accounts) {\r\n    window.location.replace(location.pathname);\r\n  });\r\n});\r\n\r\n    return (\r\n      <div className=\"\">\r\n        <nav className=\"w-screen\">\r\n          <ul className='flex items-end justify-between py-3 bg-transparent text-white pr-5'>\r\n          <li className='flex items-end ml-5 pb-2'>\r\n            <Link to=\"/\">\r\n            <img src={fullLogo} alt=\"\" width={120} height={120} className=\"inline-block -mt-2\"/>\r\n            <div className='inline-block font-bold text-xl ml-2'>\r\n              NFT Marketplace\r\n            </div>\r\n            </Link>\r\n          </li>\r\n          <li className='w-2/6'>\r\n            <ul className='lg:flex justify-between font-bold mr-10 text-lg'>\r\n              {location.pathname === \"/\" ? \r\n              <li className='border-b-2 hover:pb-0 p-2'>\r\n                <Link to=\"/\">Marketplace</Link>\r\n              </li>\r\n              :\r\n              <li className='hover:border-b-2 hover:pb-0 p-2'>\r\n                <Link to=\"/\">Marketplace</Link>\r\n              </li>              \r\n              }\r\n              {location.pathname === \"/sellNFT\" ? \r\n              <li className='border-b-2 hover:pb-0 p-2'>\r\n                <Link to=\"/sellNFT\">List My NFT</Link>\r\n              </li>\r\n              :\r\n              <li className='hover:border-b-2 hover:pb-0 p-2'>\r\n                <Link to=\"/sellNFT\">List My NFT</Link>\r\n              </li>              \r\n              }              \r\n              {location.pathname === \"/profile\" ? \r\n              <li className='border-b-2 hover:pb-0 p-2'>\r\n                <Link to=\"/profile\">Profile</Link>\r\n              </li>\r\n              :\r\n              <li className='hover:border-b-2 hover:pb-0 p-2'>\r\n                <Link to=\"/profile\">Profile</Link>\r\n              </li>              \r\n              }  \r\n              <li>\r\n                <button className=\"enableEthereumButton bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded text-sm\" onClick={connectWebsite}>{connected? \"Connected\":\"Connect Wallet\"}</button>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          </ul>\r\n        </nav>\r\n        <div className='text-white text-bold text-right mr-10 text-sm'>\r\n          {currAddress !== \"0x\" ? \"Connected to\":\"Not Connected. Please login to view NFTs\"} {currAddress !== \"0x\" ? (currAddress.substring(0,15)+'...'):\"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Navbar;","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\utils.js",[],[],"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\pinata.js",[],[],"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTTile.js",["214","215"],[],"import axie from \"../tile.jpeg\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n  } from \"react-router-dom\";\r\nimport { GetIpfsUrlFromPinata } from \"../utils\";\r\n\r\nfunction NFTTile (data) {\r\n    const newTo = {\r\n        pathname:\"/nftPage/\"+data.data.tokenId\r\n    }\r\n\r\n    const IPFSUrl = GetIpfsUrlFromPinata(data.data.image);\r\n\r\n    return (\r\n        <Link to={newTo}>\r\n        <div className=\"border-2 ml-12 mt-5 mb-12 flex flex-col items-center rounded-lg w-48 md:w-72 shadow-2xl\">\r\n            <img src={IPFSUrl} alt=\"\" className=\"w-72 h-80 rounded-lg object-cover\" />\r\n            <div className= \"text-white w-full p-2 bg-gradient-to-t from-[#454545] to-transparent rounded-lg pt-5 -mt-20\">\r\n                <strong className=\"text-xl\">{data.data.name}</strong>\r\n                <p className=\"display-inline\">\r\n                    {data.data.description}\r\n                </p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default NFTTile;\r\n","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\index.js",["216"],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\App.js",["217","218","219"],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\reportWebVitals.js",[],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\SellNFT.js",["220"],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\Marketplace.js",[],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\Profile.js",["221","222"],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTpage.js",["223","224","225","226"],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\Navbar.js",["227","228","229","230","231","232","233","234"],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\pinata.js",[],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\utils.js",[],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTTile.js",["235","236"],[],"C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\index.js",["237"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport SellNFT from './components/SellNFT';\r\nimport Marketplace from './components/Marketplace';\r\nimport Profile from './components/Profile';\r\nimport NFTPage from './components/NFTpage';\r\nimport Search from './components/Search';\r\nimport Recent from \"./components/Recent\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Marketplace />} />\r\n        <Route path=\"/Recent\" element={<Recent />} />\r\n        <Route path=\"/Search\" element={<Search />} />\r\n        <Route path=\"/sellNFT\" element={<SellNFT />} />\r\n        <Route path=\"/nftPage/:tokenId\" element={<NFTPage />} />\r\n        <Route path=\"/profile\" element={<Profile />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\App.js",[],[],"C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\SellNFT.js",["238"],[],"C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\Profile.js",["239","240"],[],"import Navbar from \"./Navbar\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport MarketplaceJSON from \"../Marketplace.json\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport NFTTile from \"./NFTTile\";\r\n\r\nexport default function Profile() {\r\n  const [data, updateData] = useState([]);\r\n  const [dataFetched, updateFetched] = useState(false);\r\n  const [address, updateAddress] = useState(\"0x\");\r\n  const [totalPrice, updateTotalPrice] = useState(\"0\");\r\n\r\n  async function getNFTData(tokenId) {\r\n    const ethers = require(\"ethers\");\r\n    let sumPrice = 0;\r\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    const addr = await signer.getAddress();\r\n\r\n    //Pull the deployed contract instance\r\n    let contract = new ethers.Contract(\r\n      MarketplaceJSON.address,\r\n      MarketplaceJSON.abi,\r\n      signer\r\n    );\r\n\r\n    //create an NFT Token\r\n    let transaction = await contract.getMyNFTs();\r\n\r\n    \r\n\r\n    const items = await Promise.all(\r\n      transaction.map(async (i) => {\r\n        const tokenURI = await contract.tokenURI(i.tokenId);\r\n        let meta = await axios.get(tokenURI);\r\n        meta = meta.data;\r\n\r\n        let price = ethers.utils.formatUnits(i.price.toString(), \"ether\");\r\n        let item = {\r\n          price,\r\n          tokenId: i.tokenId.toNumber(),\r\n          seller: i.seller,\r\n          owner: i.owner,\r\n          image: meta.image,\r\n          name: meta.name,\r\n          description: meta.description,\r\n        };\r\n        sumPrice += Number(price);\r\n        return item;\r\n      })\r\n    );\r\n\r\n    updateData(items);\r\n    updateFetched(true);\r\n    updateAddress(addr);\r\n    updateTotalPrice(sumPrice.toPrecision(3));\r\n  }\r\n\r\n  const params = useParams();\r\n  const tokenId = params.tokenId;\r\n  if (!dataFetched) getNFTData(tokenId);\r\n\r\n  \r\n  return (\r\n    <div className=\"profileClass\" style={{ \"min-height\": \"100vh\" }}>\r\n      <Navbar></Navbar>\r\n      <div className=\"profileClass\">\r\n        <div className=\"flex text-center flex-col mt-11 md:text-2xl text-white\">\r\n          <div className=\"mb-5\">\r\n            <h2 className=\"font-bold\">Wallet Address</h2>\r\n            {address}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\">\r\n          <div>\r\n            <h2 className=\"font-bold\">No. of NFTs</h2>\r\n            {data.length}\r\n          </div>\r\n          <div className=\"ml-20\">\r\n            <h2 className=\"font-bold\">Total Value</h2>\r\n            {totalPrice} ETH\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col text-center items-center mt-11 text-white\">\r\n          <h2 className=\"font-bold\">Your NFTs</h2>\r\n          <div className=\"flex justify-center flex-wrap max-w-screen-xl\">\r\n            {data.map((value, index) => {\r\n              return <NFTTile data={value} key={index}></NFTTile>;\r\n            })}\r\n          </div>\r\n          <div className=\"mt-10 text-xl\">\r\n            {data.length == 0\r\n              ? \"Oops, No NFT data to display (Are you logged in?)\"\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\Marketplace.js",[],[],"C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\NFTpage.js",["241","242"],[],"import Navbar from \"./Navbar\";\r\n// import axie from \"../tile.jpeg\";\r\nimport {  useParams } from \"react-router-dom\";\r\nimport MarketplaceJSON from \"../Marketplace.json\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { GetIpfsUrlFromPinata } from \"../utils\";\r\n\r\nexport default function NFTPage(props) {\r\n  const [data, updateData] = useState({});\r\n  const [dataFetched, updateDataFetched] = useState(false);\r\n  const [message, updateMessage] = useState(\"\");\r\n  const [currAddress, updateCurrAddress] = useState(\"0x\");\r\n\r\n  async function getNFTData(tokenId) {\r\n    const ethers = require(\"ethers\");\r\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    const addr = await signer.getAddress();\r\n    //Pull the deployed contract instance\r\n    let contract = new ethers.Contract(\r\n      MarketplaceJSON.address,\r\n      MarketplaceJSON.abi,\r\n      signer\r\n    );\r\n    //create an NFT Token\r\n    var tokenURI = await contract.tokenURI(tokenId);\r\n    const listedToken = await contract.getListedTokenForId(tokenId);\r\n    tokenURI = GetIpfsUrlFromPinata(tokenURI);\r\n    let meta = await axios.get(tokenURI);\r\n    meta = meta.data;\r\n    console.log(listedToken);\r\n\r\n    let item = {\r\n      price: meta.price,\r\n      tokenId: tokenId,\r\n      seller: listedToken.seller,\r\n      owner: listedToken.owner,\r\n      image: meta.image,\r\n      name: meta.name,\r\n      description: meta.description,\r\n    };\r\n    console.log(item);\r\n    updateData(item);\r\n    updateDataFetched(true);\r\n    console.log(\"address\", addr);\r\n    updateCurrAddress(addr);\r\n  }\r\n\r\n  async function buyNFT(tokenId) {\r\n    try {\r\n      const ethers = require(\"ethers\");\r\n      //After adding your Hardhat network to your metamask, this code will get providers and signers\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner();\r\n\r\n      //Pull the deployed contract instance\r\n      let contract = new ethers.Contract(\r\n        MarketplaceJSON.address,\r\n        MarketplaceJSON.abi,\r\n        signer\r\n      );\r\n      const salePrice = ethers.utils.parseUnits(data.price, \"ether\");\r\n      updateMessage(\"Buying the NFT... Please Wait (Upto 5 mins)\");\r\n      //run the executeSale function\r\n      let transaction = await contract.executeSale(tokenId, {\r\n        value: salePrice,\r\n      });\r\n      await transaction.wait();\r\n\r\n      alert(\"You successfully bought the NFT!\");\r\n      updateMessage(\"\");\r\n    } catch (e) {\r\n      alert(\"Upload Error\" + e);\r\n    }\r\n  }\r\n\r\n  const params = useParams();\r\n  const tokenId = params.tokenId;\r\n  if (!dataFetched) getNFTData(tokenId);\r\n  if (typeof data.image == \"string\")\r\n    data.image = GetIpfsUrlFromPinata(data.image);\r\n\r\n  return (\r\n    <div style={{ \"min-height\": \"100vh\" }}>\r\n      <Navbar></Navbar>\r\n      <div className=\"flex ml-20 mt-20\">\r\n        <img src={data.image} alt=\"\" className=\"w-2/5\" />\r\n        <div className=\"text-xl ml-20 space-y-8 text-white shadow-2xl rounded-lg border-2 p-5\">\r\n          <div>Name: {data.name}</div>\r\n          <div>Description: {data.description}</div>\r\n          <div>\r\n            Price: <span className=\"\">{data.price + \" ETH\"}</span>\r\n          </div>\r\n          <div>\r\n            Owner: <span className=\"text-sm\">{data.owner}</span>\r\n          </div>\r\n          <div>\r\n            Seller: <span className=\"text-sm\">{data.seller}</span>\r\n          </div>\r\n          <div>\r\n            {currAddress != data.owner && currAddress != data.seller ? (\r\n              <button\r\n                className=\"enableEthereumButton bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded text-sm\"\r\n                onClick={() => buyNFT(tokenId)}\r\n              >\r\n                Buy this NFT\r\n              </button>\r\n            ) : (\r\n              <div className=\"text-emerald-700\">\r\n                You are the owner of this NFT\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"text-green text-center mt-3\">{message}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\Navbar.js",["243","244","245","246","247","248","249","250"],[],"import logo from '../logo_3.png';\r\nimport fullLogo from '../full_logo.png';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nfunction Navbar() {\r\n\r\nconst [connected, toggleConnect] = useState(false);\r\nconst location = useLocation();\r\nconst [currAddress, updateAddress] = useState('0x');\r\n\r\nasync function getAddress() {\r\n  const ethers = require(\"ethers\");\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const addr = await signer.getAddress();\r\n  updateAddress(addr);\r\n}\r\n\r\nfunction updateButton() {\r\n  const ethereumButton = document.querySelector(\".enableEthereumButton\");\r\n  ethereumButton.textContent = \"Connected\";\r\n  ethereumButton.classList.remove(\"hover:bg-blue-70\");\r\n  ethereumButton.classList.remove(\"bg-blue-500\");\r\n  ethereumButton.classList.add(\"hover:bg-green-70\");\r\n  ethereumButton.classList.add(\"bg-green-500\");\r\n}\r\n\r\nasync function connectWebsite() {\r\n  const chainId = await window.ethereum.request({ method: \"eth_chainId\" });\r\n  if (chainId !== \"0xaa36a7\") {\r\n    //alert('Incorrect network! Switch your metamask network to Rinkeby');\r\n    await window.ethereum.request({\r\n      method: \"wallet_switchEthereumChain\",\r\n      params: [{ chainId: \"0xaa36a7\" }],\r\n    });\r\n  }\r\n  await window.ethereum.request({ method: \"eth_requestAccounts\" }).then(() => {\r\n    updateButton();\r\n    console.log(\"here\");\r\n    getAddress();\r\n    window.location.replace(location.pathname);\r\n  });\r\n}\r\n\r\nuseEffect(() => {\r\n  if (window.ethereum == undefined) return;\r\n  let val = window.ethereum.isConnected();\r\n  if (val) {\r\n    console.log(\"here\");\r\n    getAddress();\r\n    toggleConnect(val);\r\n    updateButton();\r\n  }\r\n\r\n  window.ethereum.on(\"accountsChanged\", function (accounts) {\r\n    window.location.replace(location.pathname);\r\n  });\r\n});\r\n\r\n    return (\r\n      <div className=\"\">\r\n        <nav className=\"w-screen\">\r\n          <ul className=\"flex items-end justify-between py-3 bg-transparent text-white pr-5\">\r\n            <li className=\"flex items-end ml-5 pb-2\">\r\n              <Link to=\"/\">\r\n                <img\r\n                  src={fullLogo}\r\n                  alt=\"\"\r\n                  width={120}\r\n                  height={120}\r\n                  className=\"inline-block -mt-2\"\r\n                />\r\n                <div className=\"inline-block font-bold text-xl ml-2\">\r\n                  Marketplace\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"w-4/8\">\r\n              <ul className=\"lg:flex justify-between font-bold mr-10 text-lg\">\r\n                {location.pathname === \"/Recent\" ? (\r\n                  <li className=\"border-b-2 hover:pb-0 p-2\">\r\n                    <Link to=\"/Recent\">Recent NFT</Link>\r\n                  </li>\r\n                ) : (\r\n                  <li className=\"hover:border-b-2 hover:pb-0 p-2\">\r\n                    <Link to=\"/Recent\">Recent NFT</Link>\r\n                  </li>\r\n                )}\r\n                {location.pathname === \"/Search\" ? (\r\n                  <li className=\"border-b-2 hover:pb-0 p-2\">\r\n                    <Link to=\"/Search\">Search NFT</Link>\r\n                  </li>\r\n                ) : (\r\n                  <li className=\"hover:border-b-2 hover:pb-0 p-2\">\r\n                    <Link to=\"/Search\">Search NFT</Link>\r\n                  </li>\r\n                )}\r\n                {location.pathname === \"/\" ? (\r\n                  <li className=\"border-b-2 hover:pb-0 p-2\">\r\n                    <Link to=\"/\">Local Marketplace</Link>\r\n                  </li>\r\n                ) : (\r\n                  <li className=\"hover:border-b-2 hover:pb-0 p-2\">\r\n                    <Link to=\"/\">Local Marketplace</Link>\r\n                  </li>\r\n                )}\r\n\r\n                {location.pathname === \"/sellNFT\" ? (\r\n                  <li className=\"border-b-2 hover:pb-0 p-2\">\r\n                    <Link to=\"/sellNFT\">List My NFT</Link>\r\n                  </li>\r\n                ) : (\r\n                  <li className=\"hover:border-b-2 hover:pb-0 p-2\">\r\n                    <Link to=\"/sellNFT\">List My NFT</Link>\r\n                  </li>\r\n                )}\r\n                {location.pathname === \"/profile\" ? (\r\n                  <li className=\"border-b-2 hover:pb-0 p-2\">\r\n                    <Link to=\"/profile\">Profile</Link>\r\n                  </li>\r\n                ) : (\r\n                  <li className=\"hover:border-b-2 hover:pb-0 p-2\">\r\n                    <Link to=\"/profile\">Profile</Link>\r\n                  </li>\r\n                )}\r\n                <li>\r\n                  <button\r\n                    className=\"enableEthereumButton bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded text-sm\"\r\n                    onClick={connectWebsite}\r\n                  >\r\n                    {connected ? \"Connected\" : \"Connect Wallet\"}\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className=\"text-white text-bold text-right mr-10 text-sm\">\r\n          {currAddress !== \"0x\"\r\n            ? \"Connected to\"\r\n            : \"Not Connected. Please login to view NFTs\"}{\" \"}\r\n          {currAddress !== \"0x\" ? currAddress.substring(0, 15) + \"...\" : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Navbar;","C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\NFTTile.js",[],[],"C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\pinata.js",[],[],"C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\utils.js",[],[],"C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\Search.js",[],[],"C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\SearchTile.js",[],[],"C:\\Users\\wanaqil\\alchemyy-marketplace\\src\\components\\Recent.js",[],[],{"ruleId":"251","severity":1,"message":"252","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":11},{"ruleId":"251","severity":1,"message":"255","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":14},{"ruleId":"251","severity":1,"message":"256","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":16},{"ruleId":"251","severity":1,"message":"257","line":9,"column":3,"nodeType":"253","messageId":"254","endLine":9,"endColumn":16},{"ruleId":"251","severity":1,"message":"258","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":21},{"ruleId":"259","severity":1,"message":"260","line":94,"column":26,"nodeType":"261","messageId":"262","endLine":94,"endColumn":28},{"ruleId":"251","severity":1,"message":"263","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":12},{"ruleId":"251","severity":1,"message":"258","line":3,"column":10,"nodeType":"253","messageId":"254","endLine":3,"endColumn":21},{"ruleId":"259","severity":1,"message":"264","line":103,"column":26,"nodeType":"261","messageId":"262","endLine":103,"endColumn":28},{"ruleId":"259","severity":1,"message":"264","line":103,"column":55,"nodeType":"261","messageId":"262","endLine":103,"endColumn":57},{"ruleId":"251","severity":1,"message":"265","line":16,"column":9,"nodeType":"253","messageId":"254","endLine":16,"endColumn":17},{"ruleId":"251","severity":1,"message":"266","line":1,"column":8,"nodeType":"253","messageId":"254","endLine":1,"endColumn":12},{"ruleId":"251","severity":1,"message":"267","line":4,"column":20,"nodeType":"253","messageId":"254","endLine":4,"endColumn":26},{"ruleId":"251","severity":1,"message":"268","line":5,"column":3,"nodeType":"253","messageId":"254","endLine":5,"endColumn":9},{"ruleId":"251","severity":1,"message":"269","line":6,"column":3,"nodeType":"253","messageId":"254","endLine":6,"endColumn":8},{"ruleId":"251","severity":1,"message":"270","line":8,"column":3,"nodeType":"253","messageId":"254","endLine":8,"endColumn":16},{"ruleId":"251","severity":1,"message":"271","line":9,"column":3,"nodeType":"253","messageId":"254","endLine":9,"endColumn":12},{"ruleId":"272","severity":1,"message":"273","line":54,"column":1,"nodeType":"253","endLine":54,"endColumn":10,"suggestions":"274"},{"ruleId":"259","severity":1,"message":"260","line":55,"column":23,"nodeType":"261","messageId":"262","endLine":55,"endColumn":25},{"ruleId":"251","severity":1,"message":"263","line":1,"column":8,"nodeType":"253","messageId":"254","endLine":1,"endColumn":12},{"ruleId":"251","severity":1,"message":"267","line":3,"column":22,"nodeType":"253","messageId":"254","endLine":3,"endColumn":28},{"ruleId":"251","severity":1,"message":"252","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":11},{"ruleId":"251","severity":1,"message":"255","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":14},{"ruleId":"251","severity":1,"message":"256","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":16},{"ruleId":"251","severity":1,"message":"257","line":9,"column":3,"nodeType":"253","messageId":"254","endLine":9,"endColumn":16},{"ruleId":"251","severity":1,"message":"265","line":16,"column":9,"nodeType":"253","messageId":"254","endLine":16,"endColumn":17},{"ruleId":"251","severity":1,"message":"258","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":21},{"ruleId":"259","severity":1,"message":"260","line":94,"column":26,"nodeType":"261","messageId":"262","endLine":94,"endColumn":28},{"ruleId":"251","severity":1,"message":"263","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":12},{"ruleId":"251","severity":1,"message":"258","line":3,"column":10,"nodeType":"253","messageId":"254","endLine":3,"endColumn":21},{"ruleId":"259","severity":1,"message":"264","line":103,"column":26,"nodeType":"261","messageId":"262","endLine":103,"endColumn":28},{"ruleId":"259","severity":1,"message":"264","line":103,"column":55,"nodeType":"261","messageId":"262","endLine":103,"endColumn":57},{"ruleId":"251","severity":1,"message":"266","line":1,"column":8,"nodeType":"253","messageId":"254","endLine":1,"endColumn":12},{"ruleId":"251","severity":1,"message":"267","line":4,"column":20,"nodeType":"253","messageId":"254","endLine":4,"endColumn":26},{"ruleId":"251","severity":1,"message":"268","line":5,"column":3,"nodeType":"253","messageId":"254","endLine":5,"endColumn":9},{"ruleId":"251","severity":1,"message":"269","line":6,"column":3,"nodeType":"253","messageId":"254","endLine":6,"endColumn":8},{"ruleId":"251","severity":1,"message":"270","line":8,"column":3,"nodeType":"253","messageId":"254","endLine":8,"endColumn":16},{"ruleId":"251","severity":1,"message":"271","line":9,"column":3,"nodeType":"253","messageId":"254","endLine":9,"endColumn":12},{"ruleId":"272","severity":1,"message":"273","line":54,"column":1,"nodeType":"253","endLine":54,"endColumn":10,"suggestions":"275"},{"ruleId":"259","severity":1,"message":"260","line":55,"column":23,"nodeType":"261","messageId":"262","endLine":55,"endColumn":25},{"ruleId":"251","severity":1,"message":"263","line":1,"column":8,"nodeType":"253","messageId":"254","endLine":1,"endColumn":12},{"ruleId":"251","severity":1,"message":"267","line":3,"column":22,"nodeType":"253","messageId":"254","endLine":3,"endColumn":28},{"ruleId":"251","severity":1,"message":"252","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":11},{"ruleId":"251","severity":1,"message":"265","line":16,"column":9,"nodeType":"253","messageId":"254","endLine":16,"endColumn":17},{"ruleId":"251","severity":1,"message":"258","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":21},{"ruleId":"259","severity":1,"message":"260","line":94,"column":26,"nodeType":"261","messageId":"262","endLine":94,"endColumn":28},{"ruleId":"259","severity":1,"message":"264","line":103,"column":26,"nodeType":"261","messageId":"262","endLine":103,"endColumn":28},{"ruleId":"259","severity":1,"message":"264","line":103,"column":55,"nodeType":"261","messageId":"262","endLine":103,"endColumn":57},{"ruleId":"251","severity":1,"message":"266","line":1,"column":8,"nodeType":"253","messageId":"254","endLine":1,"endColumn":12},{"ruleId":"251","severity":1,"message":"267","line":4,"column":20,"nodeType":"253","messageId":"254","endLine":4,"endColumn":26},{"ruleId":"251","severity":1,"message":"268","line":5,"column":3,"nodeType":"253","messageId":"254","endLine":5,"endColumn":9},{"ruleId":"251","severity":1,"message":"269","line":6,"column":3,"nodeType":"253","messageId":"254","endLine":6,"endColumn":8},{"ruleId":"251","severity":1,"message":"270","line":8,"column":3,"nodeType":"253","messageId":"254","endLine":8,"endColumn":16},{"ruleId":"251","severity":1,"message":"271","line":9,"column":3,"nodeType":"253","messageId":"254","endLine":9,"endColumn":12},{"ruleId":"272","severity":1,"message":"273","line":54,"column":1,"nodeType":"253","endLine":54,"endColumn":10,"suggestions":"276"},{"ruleId":"259","severity":1,"message":"260","line":55,"column":23,"nodeType":"261","messageId":"262","endLine":55,"endColumn":25},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'ReactDOM' is defined but never used.","'BrowserRouter' is defined but never used.","'useLocation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axie' is defined but never used.","Expected '!==' and instead saw '!='.","'location' is assigned a value but never used.","'logo' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'toggleConnect'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [location.pathname] as a second argument to the useEffect Hook.",["277"],["278"],["279"],{"desc":"280","fix":"281"},{"desc":"280","fix":"282"},{"desc":"280","fix":"283"},"Add dependencies array: [location.pathname]",{"range":"284","text":"285"},{"range":"286","text":"285"},{"range":"287","text":"285"},[1983,1983],", [location.pathname]",[1983,1983],[1983,1983]]