[{"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\index.js":"1","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\reportWebVitals.js":"2","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\App.js":"3","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\Marketplace.js":"4","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\Profile.js":"5","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTpage.js":"6","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\SellNFT.js":"7","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\Navbar.js":"8","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\utils.js":"9","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\pinata.js":"10","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTTile.js":"11","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\index.js":"12","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\App.js":"13","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\reportWebVitals.js":"14","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\SellNFT.js":"15","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\Marketplace.js":"16","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\Profile.js":"17","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTpage.js":"18","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\Navbar.js":"19","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\pinata.js":"20","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\utils.js":"21","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTTile.js":"22"},{"size":1120,"mtime":1690641599748,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1690641599750,"results":"25","hashOfConfig":"24"},{"size":770,"mtime":1690641599731,"results":"26","hashOfConfig":"24"},{"size":3340,"mtime":1691328052899,"results":"27","hashOfConfig":"24"},{"size":3312,"mtime":1691339521133,"results":"28","hashOfConfig":"24"},{"size":4227,"mtime":1691340815469,"results":"29","hashOfConfig":"24"},{"size":7065,"mtime":1691336335916,"results":"30","hashOfConfig":"24"},{"size":4342,"mtime":1691293541867,"results":"31","hashOfConfig":"24"},{"size":222,"mtime":1690641599754,"results":"32","hashOfConfig":"24"},{"size":2674,"mtime":1691339828325,"results":"33","hashOfConfig":"24"},{"size":978,"mtime":1691326285929,"results":"34","hashOfConfig":"24"},{"size":1120,"mtime":1690641599748,"results":"35","hashOfConfig":"36"},{"size":770,"mtime":1690641599731,"results":"37","hashOfConfig":"36"},{"size":375,"mtime":1690641599750,"results":"38","hashOfConfig":"36"},{"size":7065,"mtime":1691336335916,"results":"39","hashOfConfig":"36"},{"size":3340,"mtime":1691328052899,"results":"40","hashOfConfig":"36"},{"size":3312,"mtime":1691339521133,"results":"41","hashOfConfig":"36"},{"size":4227,"mtime":1691340815469,"results":"42","hashOfConfig":"36"},{"size":4342,"mtime":1691293541867,"results":"43","hashOfConfig":"36"},{"size":2674,"mtime":1691339828325,"results":"44","hashOfConfig":"36"},{"size":222,"mtime":1690641599754,"results":"45","hashOfConfig":"36"},{"size":978,"mtime":1691326285929,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"10chrzw",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11xqxce",{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\index.js",["119"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport SellNFT from './components/SellNFT';\r\nimport Marketplace from './components/Marketplace';\r\nimport Profile from './components/Profile';\r\nimport NFTPage from './components/NFTpage';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Marketplace />}/>\r\n        <Route path=\"/sellNFT\" element={<SellNFT />}/> \r\n        <Route path=\"/nftPage/:tokenId\" element={<NFTPage />}/>        \r\n        <Route path=\"/profile\" element={<Profile />}/> \r\n      </Routes>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",[],"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\reportWebVitals.js",[],[],"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\App.js",["120","121","122"],[],"import './App.css';\r\nimport Navbar from './components/Navbar.js';\r\nimport Marketplace from './components/Marketplace';\r\nimport Profile from './components/Profile';\r\nimport SellNFT from './components/SellNFT';\r\nimport NFTPage from './components/NFTpage';\r\nimport ReactDOM from \"react-dom/client\";\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Marketplace />}/>\r\n          <Route path=\"/nftPage\" element={<NFTPage />}/>        \r\n          <Route path=\"/profile\" element={<Profile />}/>\r\n          <Route path=\"/sellNFT\" element={<SellNFT />}/>             \r\n        </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\Marketplace.js",[],[],"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\Profile.js",["123","124"],[],"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTpage.js",["125","126","127","128"],[],"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\SellNFT.js",["129"],[],"import Navbar from \"./Navbar\";\r\nimport { useState } from \"react\";\r\nimport { uploadFileToIPFS, uploadJSONToIPFS } from \"../pinata\";\r\nimport Marketplace from \"../Marketplace.json\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nexport default function SellNFT() {\r\n  const [formParams, updateFormParams] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n  });\r\n  const [fileURL, setFileURL] = useState(null);\r\n  const ethers = require(\"ethers\");\r\n  const [message, updateMessage] = useState(\"\");\r\n  const location = useLocation();\r\n\r\n  async function disableButton() {\r\n    const listButton = document.getElementById(\"list-button\");\r\n    listButton.disabled = true;\r\n    listButton.style.backgroundColor = \"grey\";\r\n    listButton.style.opacity = 0.3;\r\n  }\r\n\r\n  async function enableButton() {\r\n    const listButton = document.getElementById(\"list-button\");\r\n    listButton.disabled = false;\r\n    listButton.style.backgroundColor = \"#A500FF\";\r\n    listButton.style.opacity = 1;\r\n  }\r\n\r\n  //This function uploads the NFT image to IPFS\r\n  async function OnChangeFile(e) {\r\n    var file = e.target.files[0];\r\n    //check for file extension\r\n    try {\r\n      //upload the file to IPFS\r\n      disableButton();\r\n      updateMessage(\"Uploading image.. please dont click anything!\");\r\n      const response = await uploadFileToIPFS(file);\r\n      if (response.success === true) {\r\n        enableButton();\r\n        updateMessage(\"\");\r\n        console.log(\"Uploaded image to Pinata: \", response.pinataURL);\r\n        setFileURL(response.pinataURL);\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Error during file upload\", e);\r\n    }\r\n  }\r\n\r\n  //This function uploads the metadata to IPFS\r\n  async function uploadMetadataToIPFS() {\r\n    const { name, description, price } = formParams;\r\n    //Make sure that none of the fields are empty\r\n    if (!name || !description || !price || !fileURL) {\r\n      updateMessage(\"Please fill all the fields!\");\r\n      return -1;\r\n    }\r\n\r\n    const nftJSON = {\r\n      name,\r\n      description,\r\n      price,\r\n      image: fileURL,\r\n    };\r\n\r\n    try {\r\n      //upload the metadata JSON to IPFS\r\n      const response = await uploadJSONToIPFS(nftJSON);\r\n      if (response.success === true) {\r\n        console.log(\"Uploaded JSON to Pinata: \", response);\r\n        return response.pinataURL;\r\n      }\r\n    } catch (e) {\r\n      console.log(\"error uploading JSON metadata:\", e);\r\n    }\r\n  }\r\n\r\n  async function listNFT(e) {\r\n    e.preventDefault();\r\n\r\n    //Upload data to IPFS\r\n    try {\r\n      const metadataURL = await uploadMetadataToIPFS();\r\n      if (metadataURL === -1) return;\r\n      //After adding your Hardhat network to your metamask, this code will get providers and signers\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner();\r\n      disableButton();\r\n      updateMessage(\r\n        \"Uploading NFT(takes 5 mins).. please dont click anything!\"\r\n      );\r\n\r\n      //Pull the deployed contract instance\r\n      let contract = new ethers.Contract(\r\n        Marketplace.address,\r\n        Marketplace.abi,\r\n        signer\r\n      );\r\n\r\n      //massage the params to be sent to the create NFT request\r\n      const price = ethers.utils.parseUnits(formParams.price, \"ether\");\r\n      let listingPrice = await contract.getListPrice();\r\n      listingPrice = listingPrice.toString();\r\n\r\n      //actually create the NFT\r\n      let transaction = await contract.createToken(metadataURL, price, {\r\n        value: listingPrice,\r\n      });\r\n      await transaction.wait();\r\n\r\n      alert(\"Successfully listed your NFT!\");\r\n      enableButton();\r\n      updateMessage(\"\");\r\n      updateFormParams({ name: \"\", description: \"\", price: \"\" });\r\n      window.location.replace(\"/\");\r\n    } catch (e) {\r\n      alert(\"Upload error\" + e);\r\n    }\r\n  }\r\n\r\n  console.log(\"Working\", process.env);\r\n  return (\r\n    <div className=\"\">\r\n      <Navbar></Navbar>\r\n      <div className=\"flex flex-col place-items-center mt-10\" id=\"nftForm\">\r\n        <form className=\"bg-white shadow-md rounded px-8 pt-4 pb-8 mb-4\">\r\n          <h3 className=\"text-center font-bold text-purple-500 mb-8\">\r\n            Upload your NFT to the marketplace\r\n          </h3>\r\n          <div className=\"mb-4\">\r\n            <label\r\n              className=\"block text-purple-500 text-sm font-bold mb-2\"\r\n              htmlFor=\"name\"\r\n            >\r\n              NFT Name\r\n            </label>\r\n            <input\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Axie#4563\"\r\n              onChange={(e) =>\r\n                updateFormParams({ ...formParams, name: e.target.value })\r\n              }\r\n              value={formParams.name}\r\n            ></input>\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <label\r\n              className=\"block text-purple-500 text-sm font-bold mb-2\"\r\n              htmlFor=\"description\"\r\n            >\r\n              NFT Description\r\n            </label>\r\n            <textarea\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n              cols=\"40\"\r\n              rows=\"5\"\r\n              id=\"description\"\r\n              type=\"text\"\r\n              placeholder=\"Axie Infinity Collection\"\r\n              value={formParams.description}\r\n              onChange={(e) =>\r\n                updateFormParams({ ...formParams, description: e.target.value })\r\n              }\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <label\r\n              className=\"block text-purple-500 text-sm font-bold mb-2\"\r\n              htmlFor=\"price\"\r\n            >\r\n              Price (in ETH)\r\n            </label>\r\n            <input\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n              type=\"number\"\r\n              placeholder=\"Min 0.01 ETH\"\r\n              step=\"0.01\"\r\n              value={formParams.price}\r\n              onChange={(e) =>\r\n                updateFormParams({ ...formParams, price: e.target.value })\r\n              }\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label\r\n              className=\"block text-purple-500 text-sm font-bold mb-2\"\r\n              htmlFor=\"image\"\r\n            >\r\n              Upload Image (&lt;500 KB)\r\n            </label>\r\n            <input type={\"file\"} onChange={OnChangeFile}></input>\r\n          </div>\r\n          <br></br>\r\n          <div className=\"text-red-500 text-center\">{message}</div>\r\n          <button\r\n            onClick={listNFT}\r\n            className=\"font-bold mt-10 w-full bg-purple-500 text-white rounded p-2 shadow-lg\"\r\n            id=\"list-button\"\r\n          >\r\n            List NFT\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\Navbar.js",["130","131","132","133","134","135","136","137"],[],"import logo from '../logo_3.png';\r\nimport fullLogo from '../full_logo.png';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nfunction Navbar() {\r\n\r\nconst [connected, toggleConnect] = useState(false);\r\nconst location = useLocation();\r\nconst [currAddress, updateAddress] = useState('0x');\r\n\r\nasync function getAddress() {\r\n  const ethers = require(\"ethers\");\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const addr = await signer.getAddress();\r\n  updateAddress(addr);\r\n}\r\n\r\nfunction updateButton() {\r\n  const ethereumButton = document.querySelector(\".enableEthereumButton\");\r\n  ethereumButton.textContent = \"Connected\";\r\n  ethereumButton.classList.remove(\"hover:bg-blue-70\");\r\n  ethereumButton.classList.remove(\"bg-blue-500\");\r\n  ethereumButton.classList.add(\"hover:bg-green-70\");\r\n  ethereumButton.classList.add(\"bg-green-500\");\r\n}\r\n\r\nasync function connectWebsite() {\r\n  const chainId = await window.ethereum.request({ method: \"eth_chainId\" });\r\n  if (chainId !== \"0xaa36a7\") {\r\n    //alert('Incorrect network! Switch your metamask network to Rinkeby');\r\n    await window.ethereum.request({\r\n      method: \"wallet_switchEthereumChain\",\r\n      params: [{ chainId: \"0xaa36a7\" }],\r\n    });\r\n  }\r\n  await window.ethereum.request({ method: \"eth_requestAccounts\" }).then(() => {\r\n    updateButton();\r\n    console.log(\"here\");\r\n    getAddress();\r\n    window.location.replace(location.pathname);\r\n  });\r\n}\r\n\r\nuseEffect(() => {\r\n  if (window.ethereum == undefined) return;\r\n  let val = window.ethereum.isConnected();\r\n  if (val) {\r\n    console.log(\"here\");\r\n    getAddress();\r\n    toggleConnect(val);\r\n    updateButton();\r\n  }\r\n\r\n  window.ethereum.on(\"accountsChanged\", function (accounts) {\r\n    window.location.replace(location.pathname);\r\n  });\r\n});\r\n\r\n    return (\r\n      <div className=\"\">\r\n        <nav className=\"w-screen\">\r\n          <ul className='flex items-end justify-between py-3 bg-transparent text-white pr-5'>\r\n          <li className='flex items-end ml-5 pb-2'>\r\n            <Link to=\"/\">\r\n            <img src={fullLogo} alt=\"\" width={120} height={120} className=\"inline-block -mt-2\"/>\r\n            <div className='inline-block font-bold text-xl ml-2'>\r\n              NFT Marketplace\r\n            </div>\r\n            </Link>\r\n          </li>\r\n          <li className='w-2/6'>\r\n            <ul className='lg:flex justify-between font-bold mr-10 text-lg'>\r\n              {location.pathname === \"/\" ? \r\n              <li className='border-b-2 hover:pb-0 p-2'>\r\n                <Link to=\"/\">Marketplace</Link>\r\n              </li>\r\n              :\r\n              <li className='hover:border-b-2 hover:pb-0 p-2'>\r\n                <Link to=\"/\">Marketplace</Link>\r\n              </li>              \r\n              }\r\n              {location.pathname === \"/sellNFT\" ? \r\n              <li className='border-b-2 hover:pb-0 p-2'>\r\n                <Link to=\"/sellNFT\">List My NFT</Link>\r\n              </li>\r\n              :\r\n              <li className='hover:border-b-2 hover:pb-0 p-2'>\r\n                <Link to=\"/sellNFT\">List My NFT</Link>\r\n              </li>              \r\n              }              \r\n              {location.pathname === \"/profile\" ? \r\n              <li className='border-b-2 hover:pb-0 p-2'>\r\n                <Link to=\"/profile\">Profile</Link>\r\n              </li>\r\n              :\r\n              <li className='hover:border-b-2 hover:pb-0 p-2'>\r\n                <Link to=\"/profile\">Profile</Link>\r\n              </li>              \r\n              }  \r\n              <li>\r\n                <button className=\"enableEthereumButton bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded text-sm\" onClick={connectWebsite}>{connected? \"Connected\":\"Connect Wallet\"}</button>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          </ul>\r\n        </nav>\r\n        <div className='text-white text-bold text-right mr-10 text-sm'>\r\n          {currAddress !== \"0x\" ? \"Connected to\":\"Not Connected. Please login to view NFTs\"} {currAddress !== \"0x\" ? (currAddress.substring(0,15)+'...'):\"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Navbar;","C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\utils.js",[],[],"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\pinata.js",[],[],"C:\\Users\\wanaqil\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTTile.js",["138","139"],[],"import axie from \"../tile.jpeg\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n  } from \"react-router-dom\";\r\nimport { GetIpfsUrlFromPinata } from \"../utils\";\r\n\r\nfunction NFTTile (data) {\r\n    const newTo = {\r\n        pathname:\"/nftPage/\"+data.data.tokenId\r\n    }\r\n\r\n    const IPFSUrl = GetIpfsUrlFromPinata(data.data.image);\r\n\r\n    return (\r\n        <Link to={newTo}>\r\n        <div className=\"border-2 ml-12 mt-5 mb-12 flex flex-col items-center rounded-lg w-48 md:w-72 shadow-2xl\">\r\n            <img src={IPFSUrl} alt=\"\" className=\"w-72 h-80 rounded-lg object-cover\" />\r\n            <div className= \"text-white w-full p-2 bg-gradient-to-t from-[#454545] to-transparent rounded-lg pt-5 -mt-20\">\r\n                <strong className=\"text-xl\">{data.data.name}</strong>\r\n                <p className=\"display-inline\">\r\n                    {data.data.description}\r\n                </p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default NFTTile;\r\n","C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\index.js",["140"],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\App.js",["141","142","143"],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\reportWebVitals.js",[],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\SellNFT.js",["144"],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\Marketplace.js",[],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\Profile.js",["145","146"],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTpage.js",["147","148","149","150"],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\Navbar.js",["151","152","153","154","155","156","157","158"],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\pinata.js",[],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\utils.js",[],[],"C:\\Users\\wanaqil\\Documents\\backup fyp\\RTW3-Week7-NFT-Marketplace\\src\\components\\NFTTile.js",["159","160"],[],{"ruleId":"161","severity":1,"message":"162","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":11},{"ruleId":"161","severity":1,"message":"165","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"166","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":16},{"ruleId":"161","severity":1,"message":"167","line":9,"column":3,"nodeType":"163","messageId":"164","endLine":9,"endColumn":16},{"ruleId":"161","severity":1,"message":"168","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":21},{"ruleId":"169","severity":1,"message":"170","line":94,"column":26,"nodeType":"171","messageId":"172","endLine":94,"endColumn":28},{"ruleId":"161","severity":1,"message":"173","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":12},{"ruleId":"161","severity":1,"message":"168","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":21},{"ruleId":"169","severity":1,"message":"174","line":103,"column":26,"nodeType":"171","messageId":"172","endLine":103,"endColumn":28},{"ruleId":"169","severity":1,"message":"174","line":103,"column":55,"nodeType":"171","messageId":"172","endLine":103,"endColumn":57},{"ruleId":"161","severity":1,"message":"175","line":16,"column":9,"nodeType":"163","messageId":"164","endLine":16,"endColumn":17},{"ruleId":"161","severity":1,"message":"176","line":1,"column":8,"nodeType":"163","messageId":"164","endLine":1,"endColumn":12},{"ruleId":"161","severity":1,"message":"177","line":4,"column":20,"nodeType":"163","messageId":"164","endLine":4,"endColumn":26},{"ruleId":"161","severity":1,"message":"178","line":5,"column":3,"nodeType":"163","messageId":"164","endLine":5,"endColumn":9},{"ruleId":"161","severity":1,"message":"179","line":6,"column":3,"nodeType":"163","messageId":"164","endLine":6,"endColumn":8},{"ruleId":"161","severity":1,"message":"180","line":8,"column":3,"nodeType":"163","messageId":"164","endLine":8,"endColumn":16},{"ruleId":"161","severity":1,"message":"181","line":9,"column":3,"nodeType":"163","messageId":"164","endLine":9,"endColumn":12},{"ruleId":"182","severity":1,"message":"183","line":54,"column":1,"nodeType":"163","endLine":54,"endColumn":10,"suggestions":"184"},{"ruleId":"169","severity":1,"message":"170","line":55,"column":23,"nodeType":"171","messageId":"172","endLine":55,"endColumn":25},{"ruleId":"161","severity":1,"message":"173","line":1,"column":8,"nodeType":"163","messageId":"164","endLine":1,"endColumn":12},{"ruleId":"161","severity":1,"message":"177","line":3,"column":22,"nodeType":"163","messageId":"164","endLine":3,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":11},{"ruleId":"161","severity":1,"message":"165","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"166","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":16},{"ruleId":"161","severity":1,"message":"167","line":9,"column":3,"nodeType":"163","messageId":"164","endLine":9,"endColumn":16},{"ruleId":"161","severity":1,"message":"175","line":16,"column":9,"nodeType":"163","messageId":"164","endLine":16,"endColumn":17},{"ruleId":"161","severity":1,"message":"168","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":21},{"ruleId":"169","severity":1,"message":"170","line":94,"column":26,"nodeType":"171","messageId":"172","endLine":94,"endColumn":28},{"ruleId":"161","severity":1,"message":"173","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":12},{"ruleId":"161","severity":1,"message":"168","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":21},{"ruleId":"169","severity":1,"message":"174","line":103,"column":26,"nodeType":"171","messageId":"172","endLine":103,"endColumn":28},{"ruleId":"169","severity":1,"message":"174","line":103,"column":55,"nodeType":"171","messageId":"172","endLine":103,"endColumn":57},{"ruleId":"161","severity":1,"message":"176","line":1,"column":8,"nodeType":"163","messageId":"164","endLine":1,"endColumn":12},{"ruleId":"161","severity":1,"message":"177","line":4,"column":20,"nodeType":"163","messageId":"164","endLine":4,"endColumn":26},{"ruleId":"161","severity":1,"message":"178","line":5,"column":3,"nodeType":"163","messageId":"164","endLine":5,"endColumn":9},{"ruleId":"161","severity":1,"message":"179","line":6,"column":3,"nodeType":"163","messageId":"164","endLine":6,"endColumn":8},{"ruleId":"161","severity":1,"message":"180","line":8,"column":3,"nodeType":"163","messageId":"164","endLine":8,"endColumn":16},{"ruleId":"161","severity":1,"message":"181","line":9,"column":3,"nodeType":"163","messageId":"164","endLine":9,"endColumn":12},{"ruleId":"182","severity":1,"message":"183","line":54,"column":1,"nodeType":"163","endLine":54,"endColumn":10,"suggestions":"185"},{"ruleId":"169","severity":1,"message":"170","line":55,"column":23,"nodeType":"171","messageId":"172","endLine":55,"endColumn":25},{"ruleId":"161","severity":1,"message":"173","line":1,"column":8,"nodeType":"163","messageId":"164","endLine":1,"endColumn":12},{"ruleId":"161","severity":1,"message":"177","line":3,"column":22,"nodeType":"163","messageId":"164","endLine":3,"endColumn":28},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'ReactDOM' is defined but never used.","'BrowserRouter' is defined but never used.","'useLocation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axie' is defined but never used.","Expected '!==' and instead saw '!='.","'location' is assigned a value but never used.","'logo' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'toggleConnect'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [location.pathname] as a second argument to the useEffect Hook.",["186"],["187"],{"desc":"188","fix":"189"},{"desc":"188","fix":"190"},"Add dependencies array: [location.pathname]",{"range":"191","text":"192"},{"range":"193","text":"192"},[1983,1983],", [location.pathname]",[1983,1983]]