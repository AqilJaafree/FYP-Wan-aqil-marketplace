{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/wanaqil/alchemyy-marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/wanaqil/alchemyy-marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/wanaqil/alchemyy-marketplace/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Navbar from\"./Navbar\";import NFTTile from\"./NFTTile\";import MarketplaceJSON from\"../Marketplace.json\";import axios from\"axios\";import{useState}from\"react\";import{GetIpfsUrlFromPinata}from\"../utils\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Marketplace(){var sampleData=[{\"name\":\"NFT#1\",\"description\":\"Alchemy's First NFT\",\"website\":\"http://axieinfinity.io\",\"image\":\"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\"price\":\"0.03ETH\",\"currentlySelling\":\"True\",\"address\":\"0xe81Bf5A757CB4f7F82a2F23b1e59bE45c33c5b13\"},{\"name\":\"NFT#2\",\"description\":\"Alchemy's Second NFT\",\"website\":\"http://axieinfinity.io\",\"image\":\"https://gateway.pinata.cloud/ipfs/QmdhoL9K8my2vi3fej97foiqGmJ389SMs55oC5EdkrxF2M\",\"price\":\"0.03ETH\",\"currentlySelling\":\"True\",\"address\":\"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\"},{\"name\":\"NFT#3\",\"description\":\"Alchemy's Third NFT\",\"website\":\"http://axieinfinity.io\",\"image\":\"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\"price\":\"0.03ETH\",\"currentlySelling\":\"True\",\"address\":\"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\"}];var _useState=useState(sampleData),_useState2=_slicedToArray(_useState,2),data=_useState2[0],updateData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),dataFetched=_useState4[0],updateFetched=_useState4[1];function getAllNFTs(){return _getAllNFTs.apply(this,arguments);}function _getAllNFTs(){_getAllNFTs=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var ethers,provider,signer,contract,transaction,items;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:ethers=require(\"ethers\");//After adding your Hardhat network to your metamask, this code will get providers and signers\nprovider=new ethers.providers.Web3Provider(window.ethereum);signer=provider.getSigner();//Pull the deployed contract instance\ncontract=new ethers.Contract(MarketplaceJSON.address,MarketplaceJSON.abi,signer);//create an NFT Token\n_context2.next=6;return contract.getAllNFTs();case 6:transaction=_context2.sent;_context2.next=9;return Promise.all(transaction.map(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(i){var tokenURI,meta,price,item;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return contract.tokenURI(i.tokenId);case 2:tokenURI=_context.sent;console.log(\"getting this tokenUri\",tokenURI);tokenURI=GetIpfsUrlFromPinata(tokenURI);_context.next=7;return axios.get(tokenURI);case 7:meta=_context.sent;meta=meta.data;price=ethers.utils.formatUnits(i.price.toString(),\"ether\");item={price:price,tokenId:i.tokenId.toNumber(),seller:i.seller,owner:i.owner,image:meta.image,name:meta.name,description:meta.description};return _context.abrupt(\"return\",item);case 12:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}()));case 9:items=_context2.sent;updateFetched(true);updateData(items);case 12:case\"end\":return _context2.stop();}},_callee2);}));return _getAllNFTs.apply(this,arguments);}if(!dataFetched)getAllNFTs();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col place-items-center mt-20\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"md:text-xl font-bold text-white\",children:\"Top NFTs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\",children:data.map(function(value,index){return/*#__PURE__*/_jsx(NFTTile,{data:value},index);})})]})]});}","map":{"version":3,"names":["Navbar","NFTTile","MarketplaceJSON","axios","useState","GetIpfsUrlFromPinata","jsx","_jsx","jsxs","_jsxs","Marketplace","sampleData","_useState","_useState2","_slicedToArray","data","updateData","_useState3","_useState4","dataFetched","updateFetched","getAllNFTs","_getAllNFTs","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","ethers","provider","signer","contract","transaction","items","wrap","_callee2$","_context2","prev","next","require","providers","Web3Provider","window","ethereum","getSigner","Contract","address","abi","sent","Promise","all","map","_ref","_callee","i","tokenURI","meta","price","item","_callee$","_context","tokenId","console","log","get","utils","formatUnits","toString","toNumber","seller","owner","image","name","description","abrupt","stop","_x","children","className","value","index"],"sources":["C:/Users/wanaqil/alchemyy-marketplace/src/components/Marketplace.js"],"sourcesContent":["import Navbar from \"./Navbar\";\r\nimport NFTTile from \"./NFTTile\";\r\nimport MarketplaceJSON from \"../Marketplace.json\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { GetIpfsUrlFromPinata } from \"../utils\";\r\n\r\nexport default function Marketplace() {\r\nconst sampleData = [\r\n    {\r\n        \"name\": \"NFT#1\",\r\n        \"description\": \"Alchemy's First NFT\",\r\n        \"website\":\"http://axieinfinity.io\",\r\n        \"image\":\"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\r\n        \"price\":\"0.03ETH\",\r\n        \"currentlySelling\":\"True\",\r\n        \"address\":\"0xe81Bf5A757CB4f7F82a2F23b1e59bE45c33c5b13\",\r\n    },\r\n    {\r\n        \"name\": \"NFT#2\",\r\n        \"description\": \"Alchemy's Second NFT\",\r\n        \"website\":\"http://axieinfinity.io\",\r\n        \"image\":\"https://gateway.pinata.cloud/ipfs/QmdhoL9K8my2vi3fej97foiqGmJ389SMs55oC5EdkrxF2M\",\r\n        \"price\":\"0.03ETH\",\r\n        \"currentlySelling\":\"True\",\r\n        \"address\":\"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\",\r\n    },\r\n    {\r\n        \"name\": \"NFT#3\",\r\n        \"description\": \"Alchemy's Third NFT\",\r\n        \"website\":\"http://axieinfinity.io\",\r\n        \"image\":\"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\r\n        \"price\":\"0.03ETH\",\r\n        \"currentlySelling\":\"True\",\r\n        \"address\":\"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\",\r\n    },\r\n];\r\nconst [data, updateData] = useState(sampleData);\r\nconst [dataFetched, updateFetched] = useState(false);\r\n\r\nasync function getAllNFTs() {\r\n  const ethers = require(\"ethers\");\r\n  //After adding your Hardhat network to your metamask, this code will get providers and signers\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  //Pull the deployed contract instance\r\n  let contract = new ethers.Contract(\r\n    MarketplaceJSON.address,\r\n    MarketplaceJSON.abi,\r\n    signer\r\n  );\r\n  //create an NFT Token\r\n  let transaction = await contract.getAllNFTs();\r\n\r\n  //Fetch all the details of every NFT from the contract and display\r\n  const items = await Promise.all(\r\n    transaction.map(async (i) => {\r\n      var tokenURI = await contract.tokenURI(i.tokenId);\r\n      console.log(\"getting this tokenUri\", tokenURI);\r\n      tokenURI = GetIpfsUrlFromPinata(tokenURI);\r\n      let meta = await axios.get(tokenURI);\r\n      meta = meta.data;\r\n\r\n      let price = ethers.utils.formatUnits(i.price.toString(), \"ether\");\r\n      let item = {\r\n        price,\r\n        tokenId: i.tokenId.toNumber(),\r\n        seller: i.seller,\r\n        owner: i.owner,\r\n        image: meta.image,\r\n        name: meta.name,\r\n        description: meta.description,\r\n      };\r\n      return item;\r\n    })\r\n  );\r\n\r\n  updateFetched(true);\r\n  updateData(items);\r\n}\r\n\r\nif (!dataFetched) \r\ngetAllNFTs();\r\n\r\n\r\nreturn (\r\n    <div>\r\n        <Navbar></Navbar>\r\n        <div className=\"flex flex-col place-items-center mt-20\">\r\n            <div className=\"md:text-xl font-bold text-white\">\r\n                Top NFTs\r\n            </div>\r\n            <div className=\"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\">\r\n                {data.map((value, index) => {\r\n                    return <NFTTile data={value} key={index}></NFTTile>;\r\n                })}\r\n            </div>\r\n        </div>            \r\n    </div>\r\n);\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}