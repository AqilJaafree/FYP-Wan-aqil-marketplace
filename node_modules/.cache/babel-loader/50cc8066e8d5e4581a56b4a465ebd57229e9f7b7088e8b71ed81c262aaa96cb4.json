{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wanaqil\\\\alchemyy-marketplace\\\\src\\\\components\\\\Recent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recent() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [nftData, setNftData] = useState({\n    openSeaData: null,\n    magicEdenData: null\n  });\n  useEffect(() => {\n    const fetchNftListings = async () => {\n      setLoading(true);\n      setError(\"\");\n      try {\n        // OpenSea API\n        const openSeaHeaders = new Headers();\n        openSeaHeaders.append(\"X-API-KEY\", \"36bcfeb8b7b848dd9eec125683d47078\");\n        const openSeaRequestOptions = {\n          method: \"GET\",\n          headers: openSeaHeaders,\n          redirect: \"follow\"\n        };\n        const openSeaResponse = await fetch(`https://api.opensea.io/v2/orders/ethereum/seaport/listings?order_by=created_date&order_direction=desc`, openSeaRequestOptions);\n        const openSeaData = await openSeaResponse.json();\n\n        // Magic Eden API\n        const magicEdenUrl = \"https://api-mainnet.magiceden.dev/v2/collections/symbol/listings\";\n        const magicEdenOptions = {\n          method: \"GET\",\n          headers: {\n            accept: \"application/json\"\n          }\n        };\n        const magicEdenResponse = await fetch(magicEdenUrl, magicEdenOptions);\n        const magicEdenData = await magicEdenResponse.json();\n\n        // Store the fetched NFT data from both APIs in the state\n        setNftData({\n          openSeaData,\n          magicEdenData\n        });\n      } catch (error) {\n        setError(\"An error occurred while fetching NFT data\");\n      }\n      setLoading(false);\n    };\n    fetchNftListings(); // Fetch NFT listings on page refresh\n  }, []); // Empty dependency array to run the effect only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      className: \"navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col place-items-center mt-20 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent NFT Listings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5 max-w-screen-xl text-center\",\n        children: [nftData.openSeaData && nftData.openSeaData.orders.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"md:text-xl font-bold\",\n            children: \"OpenSea Listings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-4 gap-4\",\n            children: nftData.openSeaData.orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nft-item mb-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"NFT Name: \", order.maker_asset_bundle.assets[0].name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: order.maker_asset_bundle.assets[0].image_url,\n                alt: order.maker_asset_bundle.assets[0].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Contract:\", \" \", order.maker_asset_bundle.assets[0].contract]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this)]\n            }, order.order_hash, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No OpenSea NFTs found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), nftData.magicEdenData && nftData.magicEdenData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"md:text-xl font-bold\",\n            children: \"Magic Eden Listings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-4 gap-4\",\n            children: nftData.magicEdenData.map(listing => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nft-item mb-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"NFT Name: \", listing.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: listing.image,\n                alt: listing.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 23\n              }, this)]\n            }, listing.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Magic Eden NFTs found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Recent, \"6Afb0BUS/wI91fWVHXnQtm3YIXw=\");\n_c = Recent;\nexport default Recent;\nvar _c;\n$RefreshReg$(_c, \"Recent\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","jsxDEV","_jsxDEV","Recent","_s","loading","setLoading","error","setError","nftData","setNftData","openSeaData","magicEdenData","fetchNftListings","openSeaHeaders","Headers","append","openSeaRequestOptions","method","headers","redirect","openSeaResponse","fetch","json","magicEdenUrl","magicEdenOptions","accept","magicEdenResponse","children","className","fileName","_jsxFileName","lineNumber","columnNumber","orders","length","map","order","maker_asset_bundle","assets","name","src","image_url","alt","contract","order_hash","listing","image","id","_c","$RefreshReg$"],"sources":["C:/Users/wanaqil/alchemyy-marketplace/src/components/Recent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport NavBar from \"./Navbar\";\r\n\r\nfunction Recent() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [nftData, setNftData] = useState({\r\n    openSeaData: null,\r\n    magicEdenData: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchNftListings = async () => {\r\n      setLoading(true);\r\n      setError(\"\");\r\n\r\n      try {\r\n        // OpenSea API\r\n        const openSeaHeaders = new Headers();\r\n        openSeaHeaders.append(\"X-API-KEY\", \"36bcfeb8b7b848dd9eec125683d47078\");\r\n\r\n        const openSeaRequestOptions = {\r\n          method: \"GET\",\r\n          headers: openSeaHeaders,\r\n          redirect: \"follow\",\r\n        };\r\n\r\n        const openSeaResponse = await fetch(\r\n          `https://api.opensea.io/v2/orders/ethereum/seaport/listings?order_by=created_date&order_direction=desc`,\r\n          openSeaRequestOptions\r\n        );\r\n\r\n        const openSeaData = await openSeaResponse.json();\r\n\r\n        // Magic Eden API\r\n        const magicEdenUrl =\r\n          \"https://api-mainnet.magiceden.dev/v2/collections/symbol/listings\";\r\n        const magicEdenOptions = {\r\n          method: \"GET\",\r\n          headers: { accept: \"application/json\" },\r\n        };\r\n\r\n        const magicEdenResponse = await fetch(magicEdenUrl, magicEdenOptions);\r\n        const magicEdenData = await magicEdenResponse.json();\r\n\r\n        // Store the fetched NFT data from both APIs in the state\r\n        setNftData({ openSeaData, magicEdenData });\r\n      } catch (error) {\r\n        setError(\"An error occurred while fetching NFT data\");\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchNftListings(); // Fetch NFT listings on page refresh\r\n  }, []); // Empty dependency array to run the effect only once\r\n\r\n  return (\r\n    <div>\r\n      <NavBar className=\"navbar\" />\r\n      <div className=\"flex flex-col place-items-center mt-20 text-white\">\r\n        <h2>Recent NFT Listings</h2>\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : error ? (\r\n          <p>Error: {error}</p>\r\n        ) : (\r\n          <div className=\"mt-5 max-w-screen-xl text-center\">\r\n            {/* Display OpenSea NFTs */}\r\n            {nftData.openSeaData && nftData.openSeaData.orders.length > 0 ? (\r\n              <div>\r\n                <h3 className=\"md:text-xl font-bold\">OpenSea Listings</h3>\r\n                <div className=\"grid grid-cols-4 gap-4\">\r\n                  {nftData.openSeaData.orders.map((order) => (\r\n                    <div key={order.order_hash} className=\"nft-item mb-5\">\r\n                      <h4>\r\n                        NFT Name: {order.maker_asset_bundle.assets[0].name}\r\n                      </h4>\r\n                      <img\r\n                        src={order.maker_asset_bundle.assets[0].image_url}\r\n                        alt={order.maker_asset_bundle.assets[0].name}\r\n                      />\r\n                      <p>\r\n                        Contract:{\" \"}\r\n                        {order.maker_asset_bundle.assets[0].contract}\r\n                      </p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <p>No OpenSea NFTs found</p>\r\n            )}\r\n\r\n            {/* Display Magic Eden NFTs */}\r\n            {nftData.magicEdenData && nftData.magicEdenData.length > 0 ? (\r\n              <div>\r\n                <h3 className=\"md:text-xl font-bold\">Magic Eden Listings</h3>\r\n                <div className=\"grid grid-cols-4 gap-4\">\r\n                  {nftData.magicEdenData.map((listing) => (\r\n                    <div key={listing.id} className=\"nft-item mb-5\">\r\n                      <h4>NFT Name: {listing.name}</h4>\r\n                      <img src={listing.image} alt={listing.name} />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <p>No Magic Eden NFTs found</p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}