{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wanaqil\\\\RTW3-Week7-NFT-Marketplace\\\\src\\\\components\\\\Marketplace.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\nimport NFTTile from \"./NFTTile\";\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { GetIpfsUrlFromPinata } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Marketplace() {\n  _s();\n  const sampleData = [{\n    name: \"NFT#1\",\n    description: \"Alchemy's First NFT\",\n    website: \"http://axieinfinity.io\",\n    image: \"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n    price: \"0.03ETH\",\n    currentlySelling: \"True\",\n    address: \"0xe81Bf5A757CB4f7F82a2F23b1e59bE45c33c5b13\"\n  }, {\n    name: \"NFT#2\",\n    description: \"Alchemy's Second NFT\",\n    website: \"http://axieinfinity.io\",\n    image: \"https://gateway.pinata.cloud/ipfs/QmdhoL9K8my2vi3fej97foiqGmJ389SMs55oC5EdkrxF2M\",\n    price: \"0.03ETH\",\n    currentlySelling: \"True\",\n    address: \"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\"\n  }, {\n    name: \"NFT#3\",\n    description: \"Alchemy's Third NFT\",\n    website: \"http://axieinfinity.io\",\n    image: \"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n    price: \"0.03ETH\",\n    currentlySelling: \"True\",\n    address: \"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\"\n  }];\n  const [data, setData] = useState(sampleData);\n  const [dataFetched, setDataFetched] = useState(false);\n  useEffect(() => {\n    if (!dataFetched) getAllNFTs();\n  }, [dataFetched]);\n  async function getAllNFTs() {\n    const ethers = require(\"ethers\");\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer);\n    let transaction;\n    try {\n      transaction = await contract.getAllNFTs();\n    } catch (error) {\n      console.error('Error fetching NFTs: ', error);\n      return;\n    }\n    if (!transaction || !Array.isArray(transaction)) {\n      console.error('Transaction data is incorrect');\n      return;\n    }\n    const items = await Promise.all(transaction.map(async i => {\n      if (i) {\n        let tokenURI;\n        try {\n          tokenURI = await contract.tokenURI(i.tokenId);\n          tokenURI = GetIpfsUrlFromPinata(tokenURI);\n        } catch (error) {\n          console.error('Error fetching token URI: ', error);\n          return;\n        }\n        let meta;\n        try {\n          const response = await axios.get(tokenURI);\n          meta = response.data;\n        } catch (error) {\n          console.error('Error fetching metadata: ', error);\n          return;\n        }\n        if (!meta) {\n          console.error('Meta data is incorrect');\n          return;\n        }\n        let price = ethers.utils.formatUnits(i.price.toString(), \"ether\");\n        let item = {\n          price,\n          tokenId: i.tokenId.toNumber(),\n          seller: i.seller,\n          owner: i.owner,\n          image: meta.image,\n          name: meta.name,\n          description: meta.description\n        };\n        return item;\n      }\n    }));\n    setDataFetched(true);\n    setData(items);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col place-items-center mt-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:text-xl font-bold text-white\",\n        children: \"Top NFTs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\",\n        children: data && Array.isArray(data) && data.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(NFTTile, {\n            data: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(Marketplace, \"ppiWAvl+wM6GEsJIRUe6WKEL0+0=\");\n_c = Marketplace;\nvar _c;\n$RefreshReg$(_c, \"Marketplace\");","map":{"version":3,"names":["useEffect","Navbar","NFTTile","MarketplaceJSON","axios","useState","GetIpfsUrlFromPinata","jsxDEV","_jsxDEV","Marketplace","_s","sampleData","name","description","website","image","price","currentlySelling","address","data","setData","dataFetched","setDataFetched","getAllNFTs","ethers","require","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","abi","transaction","error","console","Array","isArray","items","Promise","all","map","i","tokenURI","tokenId","meta","response","get","utils","formatUnits","toString","item","toNumber","seller","owner","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","index","_c","$RefreshReg$"],"sources":["C:/Users/wanaqil/RTW3-Week7-NFT-Marketplace/src/components/Marketplace.js"],"sourcesContent":["import { useEffect } from \"react\";\r\n\r\nimport Navbar from \"./Navbar\";\r\nimport NFTTile from \"./NFTTile\";\r\nimport MarketplaceJSON from \"../Marketplace.json\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { GetIpfsUrlFromPinata } from \"../utils\";\r\n\r\nexport default function Marketplace() {\r\n  const sampleData = [\r\n    {\r\n      name: \"NFT#1\",\r\n      description: \"Alchemy's First NFT\",\r\n      website: \"http://axieinfinity.io\",\r\n      image:\r\n        \"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\r\n      price: \"0.03ETH\",\r\n      currentlySelling: \"True\",\r\n      address: \"0xe81Bf5A757CB4f7F82a2F23b1e59bE45c33c5b13\",\r\n    },\r\n    {\r\n      name: \"NFT#2\",\r\n      description: \"Alchemy's Second NFT\",\r\n      website: \"http://axieinfinity.io\",\r\n      image:\r\n        \"https://gateway.pinata.cloud/ipfs/QmdhoL9K8my2vi3fej97foiqGmJ389SMs55oC5EdkrxF2M\",\r\n      price: \"0.03ETH\",\r\n      currentlySelling: \"True\",\r\n      address: \"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\",\r\n    },\r\n    {\r\n      name: \"NFT#3\",\r\n      description: \"Alchemy's Third NFT\",\r\n      website: \"http://axieinfinity.io\",\r\n      image:\r\n        \"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\r\n      price: \"0.03ETH\",\r\n      currentlySelling: \"True\",\r\n      address: \"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\",\r\n    },\r\n  ];\r\n  const [data, setData] = useState(sampleData);\r\n  const [dataFetched, setDataFetched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!dataFetched) getAllNFTs();\r\n  }, [dataFetched]);\r\n\r\n  async function getAllNFTs() {\r\n    const ethers = require(\"ethers\");\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    \r\n    let contract = new ethers.Contract(\r\n      MarketplaceJSON.address,\r\n      MarketplaceJSON.abi,\r\n      signer\r\n    );\r\n\r\n    let transaction;\r\n    try {\r\n      transaction = await contract.getAllNFTs();\r\n    } catch (error) {\r\n      console.error('Error fetching NFTs: ', error);\r\n      return;\r\n    }\r\n\r\n    if (!transaction || !Array.isArray(transaction)) {\r\n      console.error('Transaction data is incorrect');\r\n      return;\r\n    }\r\n\r\n    const items = await Promise.all(\r\n      transaction.map(async (i) => {\r\n        if (i) {\r\n          let tokenURI;\r\n          try {\r\n            tokenURI = await contract.tokenURI(i.tokenId);\r\n            tokenURI = GetIpfsUrlFromPinata(tokenURI);\r\n          } catch (error) {\r\n            console.error('Error fetching token URI: ', error);\r\n            return;\r\n          }\r\n\r\n          let meta;\r\n          try {\r\n            const response = await axios.get(tokenURI);\r\n            meta = response.data;\r\n          } catch (error) {\r\n            console.error('Error fetching metadata: ', error);\r\n            return;\r\n          }\r\n\r\n          if (!meta) {\r\n            console.error('Meta data is incorrect');\r\n            return;\r\n          }\r\n\r\n          let price = ethers.utils.formatUnits(i.price.toString(), \"ether\");\r\n\r\n          let item = {\r\n            price,\r\n            tokenId: i.tokenId.toNumber(),\r\n            seller: i.seller,\r\n            owner: i.owner,\r\n            image: meta.image,\r\n            name: meta.name,\r\n            description: meta.description,\r\n          };\r\n\r\n          return item;\r\n        }\r\n      })\r\n    );\r\n\r\n    setDataFetched(true);\r\n    setData(items);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar></Navbar>\r\n      <div className=\"flex flex-col place-items-center mt-20\">\r\n        <div className=\"md:text-xl font-bold text-white\">\r\n          Top NFTs\r\n        </div>\r\n        <div className=\"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\">\r\n          {data && Array.isArray(data) && data.map((value, index) => {\r\n            return <NFTTile data={value} key={index}></NFTTile>;\r\n          })}\r\n        </div>\r\n      </div>            \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}