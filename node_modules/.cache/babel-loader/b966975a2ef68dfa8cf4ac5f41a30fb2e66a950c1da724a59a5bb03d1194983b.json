{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wanaqil\\\\alchemyy-marketplace\\\\src\\\\components\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"./Navbar\";\nimport NFTTile from \"./NFTTile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [nftData, setNftData] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [coinGeckoData, setCoinGeckoData] = useState(null);\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  async function searchNft() {\n    if (!searchTerm) {\n      setError(\"Please enter a search term\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    try {\n      const openSeaHeaders = new Headers();\n      openSeaHeaders.append(\"X-API-KEY\", \"36bcfeb8b7b848dd9eec125683d47078\");\n      const openSeaRequestOptions = {\n        method: \"GET\",\n        headers: openSeaHeaders,\n        redirect: \"follow\"\n      };\n      const openSeaResponse = await fetch(`https://api.opensea.io/v2/collection/${searchTerm}/nfts?limit=50`, openSeaRequestOptions);\n      const openSeaData = await openSeaResponse.json();\n      console.log(\"OpenSea Data:\", openSeaData);\n      setNftData(openSeaData);\n\n      // CoinGecko API\n      const coinGeckoResponse = await fetch(`https://api.coingecko.com/api/v3/nfts/${searchTerm}`);\n      const coinGeckoData = await coinGeckoResponse.json();\n      console.log(\"CoinGecko Data:\", coinGeckoData);\n      setCoinGeckoData(coinGeckoData);\n    } catch (error) {\n      console.error(error);\n      setError(\"An error occurred while fetching NFT data\");\n    }\n    setLoading(false);\n  }\n  useEffect(() => {\n    searchNft();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      className: \"navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col place-items-center mt-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:text-xl font-bold text-white\",\n        children: \"NFT Search Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\",\n        children: nftData && nftData.assets && nftData.assets.map((nft, index) => /*#__PURE__*/_jsxDEV(NFTTile, {\n          data: nft\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"MAn5TsNtDgXSdo3MkrEVrlN9NPg=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","NFTTile","jsxDEV","_jsxDEV","Search","_s","error","setError","loading","setLoading","nftData","setNftData","searchTerm","setSearchTerm","coinGeckoData","setCoinGeckoData","handleInputChange","event","target","value","searchNft","openSeaHeaders","Headers","append","openSeaRequestOptions","method","headers","redirect","openSeaResponse","fetch","openSeaData","json","console","log","coinGeckoResponse","children","className","fileName","_jsxFileName","lineNumber","columnNumber","assets","map","nft","index","data","_c","$RefreshReg$"],"sources":["C:/Users/wanaqil/alchemyy-marketplace/src/components/Search.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport NavBar from \"./Navbar\";\r\nimport NFTTile from \"./NFTTile\";\r\n\r\nfunction Search() {\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [nftData, setNftData] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [coinGeckoData, setCoinGeckoData] = useState(null);\r\n\r\n  const handleInputChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  async function searchNft() {\r\n    if (!searchTerm) {\r\n      setError(\"Please enter a search term\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const openSeaHeaders = new Headers();\r\n      openSeaHeaders.append(\"X-API-KEY\", \"36bcfeb8b7b848dd9eec125683d47078\");\r\n\r\n      const openSeaRequestOptions = {\r\n        method: \"GET\",\r\n        headers: openSeaHeaders,\r\n        redirect: \"follow\",\r\n      };\r\n\r\n      const openSeaResponse = await fetch(\r\n        `https://api.opensea.io/v2/collection/${searchTerm}/nfts?limit=50`,\r\n        openSeaRequestOptions\r\n      );\r\n\r\n      const openSeaData = await openSeaResponse.json();\r\n\r\n      console.log(\"OpenSea Data:\", openSeaData);\r\n\r\n      setNftData(openSeaData);\r\n\r\n      // CoinGecko API\r\n      const coinGeckoResponse = await fetch(\r\n        `https://api.coingecko.com/api/v3/nfts/${searchTerm}`\r\n      );\r\n\r\n      const coinGeckoData = await coinGeckoResponse.json();\r\n      console.log(\"CoinGecko Data:\", coinGeckoData);\r\n      setCoinGeckoData(coinGeckoData);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(\"An error occurred while fetching NFT data\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    searchNft();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar className=\"navbar\" />\r\n      <div className=\"flex flex-col place-items-center mt-20\">\r\n        <div className=\"md:text-xl font-bold text-white\">\r\n          NFT Search Results\r\n        </div>\r\n        <div className=\"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\">\r\n          {nftData &&\r\n            nftData.assets &&\r\n            nftData.assets.map((nft, index) => (\r\n              <NFTTile data={nft} key={index} />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}