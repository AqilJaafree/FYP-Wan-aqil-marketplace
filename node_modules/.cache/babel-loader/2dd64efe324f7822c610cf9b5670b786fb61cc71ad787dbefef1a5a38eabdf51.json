{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/wanaqil/alchemyy-marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/wanaqil/alchemyy-marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/wanaqil/alchemyy-marketplace/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import NavBar from\"./Navbar\";import SearchTile from\"./SearchTile\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Search(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),nftData=_useState6[0],setNftData=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),searchTerm=_useState8[0],setSearchTerm=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),coinGeckoData=_useState10[0],setCoinGeckoData=_useState10[1];var handleInputChange=function handleInputChange(event){setSearchTerm(event.target.value);};function searchNft(){return _searchNft.apply(this,arguments);}function _searchNft(){_searchNft=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var openSeaHeaders,openSeaRequestOptions,openSeaResponse,openSeaData,coinGeckoResponse,_coinGeckoData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(searchTerm){_context.next=3;break;}setError(\"Please enter a search term\");return _context.abrupt(\"return\");case 3:setLoading(true);setError(\"\");_context.prev=5;openSeaHeaders=new Headers();openSeaHeaders.append(\"X-API-KEY\",\"36bcfeb8b7b848dd9eec125683d47078\");openSeaRequestOptions={method:\"GET\",headers:openSeaHeaders,redirect:\"follow\"};_context.next=11;return fetch(\"https://api.opensea.io/api/v1/assets?order_direction=desc&offset=0&limit=20&collection=\".concat(searchTerm),openSeaRequestOptions);case 11:openSeaResponse=_context.sent;_context.next=14;return openSeaResponse.json();case 14:openSeaData=_context.sent;console.log(\"OpenSea Data:\",openSeaData);setNftData(openSeaData);// CoinGecko API\n_context.next=19;return fetch(\"https://api.coingecko.com/api/v3/nfts/\".concat(searchTerm));case 19:coinGeckoResponse=_context.sent;_context.next=22;return coinGeckoResponse.json();case 22:_coinGeckoData=_context.sent;console.log(\"CoinGecko Data:\",_coinGeckoData);setCoinGeckoData(_coinGeckoData);_context.next=31;break;case 27:_context.prev=27;_context.t0=_context[\"catch\"](5);console.error(_context.t0);setError(\"An error occurred while fetching NFT data\");case 31:setLoading(false);case 32:case\"end\":return _context.stop();}},_callee,null,[[5,27]]);}));return _searchNft.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavBar,{className:\"navbar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col place-items-center mt-20\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"md:text-xl font-bold text-white\",children:\"NFT Search\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-5 max-w-screen-xl text-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter search term\",value:searchTerm,onChange:handleInputChange,className:\"mr-2 py-2 px-4 focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border-gray-300 rounded-md\"}),/*#__PURE__*/_jsx(\"button\",{onClick:searchNft,disabled:loading,className:\"py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-green-500 hover:bg-green-700\",children:\"Search NFT\"}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}),error&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error]})]}),coinGeckoData&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-5 max-w-screen-xl text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-white\",children:\"NFT Collection Data:\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-white\",children:[\" \",\"Floor Price Change (1 Year, USD):\",\" \",coinGeckoData.floor_price_1y_percentage_change.usd,\" %\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-white\",children:[\" \",\"Floor Price Change (30 Days, USD):\",\" \",coinGeckoData.floor_price_30d_percentage_change.usd,\" %\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-white\",children:[\"Floor Price Change (7 Days, USD):\",\" \",coinGeckoData.floor_price_7d_percentage_change.usd,\" %\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-white\",children:[\"Floor Price Change (24 Hours, USD):\",\" \",coinGeckoData.floor_price_24h_percentage_change.usd,\" %\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-white\",children:[\"Floor Price (ETH): \",coinGeckoData.floor_price.native_currency]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-white\",children:[\"Floor Price (USD): \",coinGeckoData.floor_price.usd]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-white\",children:[\"Number of Unique Addresses:\",\" \",coinGeckoData.number_of_unique_addresses]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-white\",children:[\"Contract Address: \",coinGeckoData.contract_address]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\",children:!loading&&!error&&nftData&&nftData.assets&&nftData.assets.map(function(nft,index){return/*#__PURE__*/_jsx(SearchTile,{data:nft,coinGeckoData:coinGeckoData},index);})})]})]});}export default Search;","map":{"version":3,"names":["React","useState","NavBar","SearchTile","jsx","_jsx","jsxs","_jsxs","Search","_useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","loading","setLoading","_useState5","_useState6","nftData","setNftData","_useState7","_useState8","searchTerm","setSearchTerm","_useState9","_useState10","coinGeckoData","setCoinGeckoData","handleInputChange","event","target","value","searchNft","_searchNft","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","openSeaHeaders","openSeaRequestOptions","openSeaResponse","openSeaData","coinGeckoResponse","_coinGeckoData","wrap","_callee$","_context","prev","next","abrupt","Headers","append","method","headers","redirect","fetch","concat","sent","json","console","log","t0","stop","children","className","type","placeholder","onChange","onClick","disabled","floor_price_1y_percentage_change","usd","floor_price_30d_percentage_change","floor_price_7d_percentage_change","floor_price_24h_percentage_change","floor_price","native_currency","number_of_unique_addresses","contract_address","assets","map","nft","index","data"],"sources":["C:/Users/wanaqil/alchemyy-marketplace/src/components/Search.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport NavBar from \"./Navbar\";\r\nimport SearchTile from \"./SearchTile\";\r\n\r\nfunction Search() {\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [nftData, setNftData] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [coinGeckoData, setCoinGeckoData] = useState(null);\r\n\r\n  const handleInputChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  async function searchNft() {\r\n    if (!searchTerm) {\r\n      setError(\"Please enter a search term\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const openSeaHeaders = new Headers();\r\n      openSeaHeaders.append(\"X-API-KEY\", \"36bcfeb8b7b848dd9eec125683d47078\");\r\n\r\n      const openSeaRequestOptions = {\r\n        method: \"GET\",\r\n        headers: openSeaHeaders,\r\n        redirect: \"follow\",\r\n      };\r\n\r\n      const openSeaResponse = await fetch(\r\n        `https://api.opensea.io/api/v1/assets?order_direction=desc&offset=0&limit=20&collection=${searchTerm}`,\r\n        openSeaRequestOptions\r\n      );\r\n\r\n      const openSeaData = await openSeaResponse.json();\r\n\r\n      console.log(\"OpenSea Data:\", openSeaData);\r\n\r\n      setNftData(openSeaData);\r\n\r\n      // CoinGecko API\r\n      const coinGeckoResponse = await fetch(\r\n        `https://api.coingecko.com/api/v3/nfts/${searchTerm}`\r\n      );\r\n\r\n      const coinGeckoData = await coinGeckoResponse.json();\r\n      console.log(\"CoinGecko Data:\", coinGeckoData);\r\n      setCoinGeckoData(coinGeckoData);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(\"An error occurred while fetching NFT data\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavBar className=\"navbar\" />\r\n      <div className=\"flex flex-col place-items-center mt-20\">\r\n        <div className=\"md:text-xl font-bold text-white\">NFT Search</div>\r\n        <div className=\"mt-5 max-w-screen-xl text-center\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter search term\"\r\n            value={searchTerm}\r\n            onChange={handleInputChange}\r\n            className=\"mr-2 py-2 px-4 focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n          />\r\n          <button\r\n            onClick={searchNft}\r\n            disabled={loading}\r\n            className=\"py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-green-500 hover:bg-green-700\"\r\n          >\r\n            Search NFT\r\n          </button>\r\n          {loading && <p>Loading...</p>}\r\n          {error && <p>Error: {error}</p>}\r\n        </div>\r\n        {coinGeckoData && (\r\n          <div className=\"mt-5 max-w-screen-xl text-center\">\r\n            <p className=\"text-white\">NFT Collection Data:</p>\r\n            <p className=\"text-white\">\r\n              {\" \"}\r\n              Floor Price Change (1 Year, USD):{\" \"}\r\n              {coinGeckoData.floor_price_1y_percentage_change.usd} %\r\n            </p>\r\n\r\n            <p className=\"text-white\">\r\n              {\" \"}\r\n              Floor Price Change (30 Days, USD):{\" \"}\r\n              {coinGeckoData.floor_price_30d_percentage_change.usd} %\r\n            </p>\r\n            <p className=\"text-white\">\r\n              Floor Price Change (7 Days, USD):{\" \"}\r\n              {coinGeckoData.floor_price_7d_percentage_change.usd} %\r\n            </p>\r\n            <p className=\"text-white\">\r\n              Floor Price Change (24 Hours, USD):{\" \"}\r\n              {coinGeckoData.floor_price_24h_percentage_change.usd} %\r\n            </p>\r\n            <p className=\"text-white\">\r\n              Floor Price (ETH): {coinGeckoData.floor_price.native_currency}\r\n            </p>\r\n            <p className=\"text-white\">\r\n              Floor Price (USD): {coinGeckoData.floor_price.usd}\r\n            </p>\r\n            <p className=\"text-white\">\r\n              Number of Unique Addresses:{\" \"}\r\n              {coinGeckoData.number_of_unique_addresses}\r\n            </p>\r\n            <p className=\"text-white\">\r\n              Contract Address: {coinGeckoData.contract_address}\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\">\r\n          {!loading &&\r\n            !error &&\r\n            nftData &&\r\n            nftData.assets &&\r\n            nftData.assets.map((nft, index) => (\r\n              <SearchTile\r\n                data={nft}\r\n                coinGeckoData={coinGeckoData}\r\n                key={index}\r\n              />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}