{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/wanaqil/alchemyy-marketplace/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/wanaqil/alchemyy-marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/wanaqil/alchemyy-marketplace/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Navbar from\"./Navbar\";import{useLocation,useParams}from\"react-router-dom\";import MarketplaceJSON from\"../Marketplace.json\";import axios from\"axios\";import{useState}from\"react\";import NFTTile from\"./NFTTile\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Profile(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],updateData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),dataFetched=_useState4[0],updateFetched=_useState4[1];var _useState5=useState(\"0x\"),_useState6=_slicedToArray(_useState5,2),address=_useState6[0],updateAddress=_useState6[1];var _useState7=useState(\"0\"),_useState8=_slicedToArray(_useState7,2),totalPrice=_useState8[0],updateTotalPrice=_useState8[1];function getNFTData(_x){return _getNFTData.apply(this,arguments);}function _getNFTData(){_getNFTData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(tokenId){var ethers,sumPrice,provider,signer,addr,contract,transaction,items;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:ethers=require(\"ethers\");sumPrice=0;//After adding your Hardhat network to your metamask, this code will get providers and signers\nprovider=new ethers.providers.Web3Provider(window.ethereum);signer=provider.getSigner();_context2.next=6;return signer.getAddress();case 6:addr=_context2.sent;//Pull the deployed contract instance\ncontract=new ethers.Contract(MarketplaceJSON.address,MarketplaceJSON.abi,signer);//create an NFT Token\n_context2.next=10;return contract.getMyNFTs();case 10:transaction=_context2.sent;_context2.next=13;return Promise.all(transaction.map(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(i){var tokenURI,meta,price,item;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return contract.tokenURI(i.tokenId);case 2:tokenURI=_context.sent;_context.next=5;return axios.get(tokenURI);case 5:meta=_context.sent;meta=meta.data;price=ethers.utils.formatUnits(i.price.toString(),\"ether\");item={price:price,tokenId:i.tokenId.toNumber(),seller:i.seller,owner:i.owner,image:meta.image,name:meta.name,description:meta.description};sumPrice+=Number(price);return _context.abrupt(\"return\",item);case 11:case\"end\":return _context.stop();}},_callee);}));return function(_x2){return _ref.apply(this,arguments);};}()));case 13:items=_context2.sent;updateData(items);updateFetched(true);updateAddress(addr);updateTotalPrice(sumPrice.toPrecision(3));case 18:case\"end\":return _context2.stop();}},_callee2);}));return _getNFTData.apply(this,arguments);}var params=useParams();var tokenId=params.tokenId;if(!dataFetched)getNFTData(tokenId);return/*#__PURE__*/_jsxs(\"div\",{className:\"profileClass\",style:{\"min-height\":\"100vh\"},children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"profileClass\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex text-center flex-col mt-11 md:text-2xl text-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-5\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold\",children:\"Wallet Address\"}),address]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold\",children:\"No. of NFTs\"}),data.length]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-20\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold\",children:\"Total Value\"}),totalPrice,\" ETH\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col text-center items-center mt-11 text-white\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold\",children:\"Your NFTs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center flex-wrap max-w-screen-xl\",children:data.map(function(value,index){return/*#__PURE__*/_jsx(NFTTile,{data:value},index);})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-10 text-xl\",children:data.length==0?\"Oops, No NFT data to display (Are you logged in?)\":\"\"})]})]})]});}","map":{"version":3,"names":["Navbar","useLocation","useParams","MarketplaceJSON","axios","useState","NFTTile","jsx","_jsx","jsxs","_jsxs","Profile","_useState","_useState2","_slicedToArray","data","updateData","_useState3","_useState4","dataFetched","updateFetched","_useState5","_useState6","address","updateAddress","_useState7","_useState8","totalPrice","updateTotalPrice","getNFTData","_x","_getNFTData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","tokenId","ethers","sumPrice","provider","signer","addr","contract","transaction","items","wrap","_callee2$","_context2","prev","next","require","providers","Web3Provider","window","ethereum","getSigner","getAddress","sent","Contract","abi","getMyNFTs","Promise","all","map","_ref","_callee","i","tokenURI","meta","price","item","_callee$","_context","get","utils","formatUnits","toString","toNumber","seller","owner","image","name","description","Number","abrupt","stop","_x2","toPrecision","params","className","style","children","length","value","index"],"sources":["C:/Users/wanaqil/alchemyy-marketplace/src/components/Profile.js"],"sourcesContent":["import Navbar from \"./Navbar\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport MarketplaceJSON from \"../Marketplace.json\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport NFTTile from \"./NFTTile\";\r\n\r\nexport default function Profile() {\r\n  const [data, updateData] = useState([]);\r\n  const [dataFetched, updateFetched] = useState(false);\r\n  const [address, updateAddress] = useState(\"0x\");\r\n  const [totalPrice, updateTotalPrice] = useState(\"0\");\r\n\r\n  async function getNFTData(tokenId) {\r\n    const ethers = require(\"ethers\");\r\n    let sumPrice = 0;\r\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    const addr = await signer.getAddress();\r\n\r\n    //Pull the deployed contract instance\r\n    let contract = new ethers.Contract(\r\n      MarketplaceJSON.address,\r\n      MarketplaceJSON.abi,\r\n      signer\r\n    );\r\n\r\n    //create an NFT Token\r\n    let transaction = await contract.getMyNFTs();\r\n\r\n    \r\n\r\n    const items = await Promise.all(\r\n      transaction.map(async (i) => {\r\n        const tokenURI = await contract.tokenURI(i.tokenId);\r\n        let meta = await axios.get(tokenURI);\r\n        meta = meta.data;\r\n\r\n        let price = ethers.utils.formatUnits(i.price.toString(), \"ether\");\r\n        let item = {\r\n          price,\r\n          tokenId: i.tokenId.toNumber(),\r\n          seller: i.seller,\r\n          owner: i.owner,\r\n          image: meta.image,\r\n          name: meta.name,\r\n          description: meta.description,\r\n        };\r\n        sumPrice += Number(price);\r\n        return item;\r\n      })\r\n    );\r\n\r\n    updateData(items);\r\n    updateFetched(true);\r\n    updateAddress(addr);\r\n    updateTotalPrice(sumPrice.toPrecision(3));\r\n  }\r\n\r\n  const params = useParams();\r\n  const tokenId = params.tokenId;\r\n  if (!dataFetched) getNFTData(tokenId);\r\n\r\n  \r\n  return (\r\n    <div className=\"profileClass\" style={{ \"min-height\": \"100vh\" }}>\r\n      <Navbar></Navbar>\r\n      <div className=\"profileClass\">\r\n        <div className=\"flex text-center flex-col mt-11 md:text-2xl text-white\">\r\n          <div className=\"mb-5\">\r\n            <h2 className=\"font-bold\">Wallet Address</h2>\r\n            {address}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\">\r\n          <div>\r\n            <h2 className=\"font-bold\">No. of NFTs</h2>\r\n            {data.length}\r\n          </div>\r\n          <div className=\"ml-20\">\r\n            <h2 className=\"font-bold\">Total Value</h2>\r\n            {totalPrice} ETH\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col text-center items-center mt-11 text-white\">\r\n          <h2 className=\"font-bold\">Your NFTs</h2>\r\n          <div className=\"flex justify-center flex-wrap max-w-screen-xl\">\r\n            {data.map((value, index) => {\r\n              return <NFTTile data={value} key={index}></NFTTile>;\r\n            })}\r\n          </div>\r\n          <div className=\"mt-10 text-xl\">\r\n            {data.length == 0\r\n              ? \"Oops, No NFT data to display (Are you logged in?)\"\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}