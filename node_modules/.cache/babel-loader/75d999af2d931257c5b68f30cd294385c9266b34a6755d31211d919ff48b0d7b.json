{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wanaqil\\\\alchemyy-marketplace\\\\src\\\\components\\\\Recent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recent() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [nftData, setNftData] = useState({\n    openSeaData: null,\n    magicEdenData: null\n  });\n  useEffect(() => {\n    const fetchNftListings = async () => {\n      setLoading(true);\n      setError(\"\");\n      try {\n        // OpenSea API\n        const openSeaHeaders = new Headers();\n        openSeaHeaders.append(\"X-API-KEY\", \"36bcfeb8b7b848dd9eec125683d47078\");\n        const openSeaRequestOptions = {\n          method: \"GET\",\n          headers: openSeaHeaders,\n          redirect: \"follow\"\n        };\n        const openSeaResponse = await fetch(`https://api.opensea.io/v2/orders/ethereum/seaport/listings?order_by=created_date&order_direction=desc`, openSeaRequestOptions);\n        const openSeaData = await openSeaResponse.json();\n        console.log(\"OpenSea Data:\", openSeaData);\n\n        // Magic Eden API\n        const magicEdenUrl = \"https://api-mainnet.magiceden.dev/v2/collections/symbol/listings\";\n        const magicEdenOptions = {\n          method: \"GET\",\n          headers: {\n            accept: \"application/json\"\n          }\n        };\n        const magicEdenResponse = await fetch(magicEdenUrl, magicEdenOptions);\n        const magicEdenData = await magicEdenResponse.json();\n        console.log(\"Magic Eden Data:\", magicEdenData);\n\n        // Store the fetched NFT data from both APIs in the state\n        setNftData({\n          openSeaData,\n          magicEdenData\n        });\n      } catch (error) {\n        setError(\"An error occurred while fetching NFT data\");\n      }\n      setLoading(false);\n    };\n    fetchNftListings(); // Fetch NFT listings on page refresh\n  }, []); // Empty dependency array to run the effect only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      className: \"navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col place-items-center mt-20 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent NFT Listings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5 max-w-screen-xl text-center\",\n        children: [nftData.openSeaData && nftData.openSeaData.orders.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"md:text-xl font-bold\",\n            children: \"OpenSea Listings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), nftData.openSeaData.orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nft-item mb-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"NFT Name: \", order.maker_asset_bundle.assets[0].name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Minted Date:\", \" \", order.maker_asset_bundle.assets[0].created_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this)]\n          }, order.order_hash, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No OpenSea NFTs found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), nftData.magicEdenData && nftData.magicEdenData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"md:text-xl font-bold\",\n            children: \"Magic Eden Listings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), nftData.magicEdenData.map(listing => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nft-item mb-5\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"NFT Name: \", listing.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this)\n          }, listing.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Magic Eden NFTs found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Recent, \"6Afb0BUS/wI91fWVHXnQtm3YIXw=\");\n_c = Recent;\nexport default Recent;\nvar _c;\n$RefreshReg$(_c, \"Recent\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","jsxDEV","_jsxDEV","Recent","_s","loading","setLoading","error","setError","nftData","setNftData","openSeaData","magicEdenData","fetchNftListings","openSeaHeaders","Headers","append","openSeaRequestOptions","method","headers","redirect","openSeaResponse","fetch","json","console","log","magicEdenUrl","magicEdenOptions","accept","magicEdenResponse","children","className","fileName","_jsxFileName","lineNumber","columnNumber","orders","length","map","order","maker_asset_bundle","assets","name","created_date","order_hash","listing","id","_c","$RefreshReg$"],"sources":["C:/Users/wanaqil/alchemyy-marketplace/src/components/Recent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport NavBar from \"./Navbar\";\r\n\r\nfunction Recent() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [nftData, setNftData] = useState({\r\n    openSeaData: null,\r\n    magicEdenData: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchNftListings = async () => {\r\n      setLoading(true);\r\n      setError(\"\");\r\n\r\n      try {\r\n        // OpenSea API\r\n        const openSeaHeaders = new Headers();\r\n        openSeaHeaders.append(\"X-API-KEY\", \"36bcfeb8b7b848dd9eec125683d47078\");\r\n\r\n        const openSeaRequestOptions = {\r\n          method: \"GET\",\r\n          headers: openSeaHeaders,\r\n          redirect: \"follow\",\r\n        };\r\n\r\n        const openSeaResponse = await fetch(\r\n          `https://api.opensea.io/v2/orders/ethereum/seaport/listings?order_by=created_date&order_direction=desc`,\r\n          openSeaRequestOptions\r\n        );\r\n\r\n        const openSeaData = await openSeaResponse.json();\r\n        console.log(\"OpenSea Data:\", openSeaData);\r\n\r\n        // Magic Eden API\r\n        const magicEdenUrl =\r\n          \"https://api-mainnet.magiceden.dev/v2/collections/symbol/listings\";\r\n        const magicEdenOptions = {\r\n          method: \"GET\",\r\n          headers: { accept: \"application/json\" },\r\n        };\r\n\r\n        const magicEdenResponse = await fetch(magicEdenUrl, magicEdenOptions);\r\n        const magicEdenData = await magicEdenResponse.json();\r\n        console.log(\"Magic Eden Data:\", magicEdenData);\r\n\r\n        // Store the fetched NFT data from both APIs in the state\r\n        setNftData({ openSeaData, magicEdenData });\r\n      } catch (error) {\r\n        setError(\"An error occurred while fetching NFT data\");\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchNftListings(); // Fetch NFT listings on page refresh\r\n  }, []); // Empty dependency array to run the effect only once\r\n\r\n  return (\r\n    <div>\r\n      <NavBar className=\"navbar\" />\r\n      <div className=\"flex flex-col place-items-center mt-20 text-white\">\r\n        <h2>Recent NFT Listings</h2>\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : error ? (\r\n          <p>Error: {error}</p>\r\n        ) : (\r\n          <div className=\"mt-5 max-w-screen-xl text-center\">\r\n            {/* Display OpenSea NFTs */}\r\n            {nftData.openSeaData && nftData.openSeaData.orders.length > 0 ? (\r\n              <div>\r\n                <h3 className=\"md:text-xl font-bold\">OpenSea Listings</h3>\r\n                {nftData.openSeaData.orders.map((order) => (\r\n                  <div key={order.order_hash} className=\"nft-item mb-5\">\r\n                    <h4>NFT Name: {order.maker_asset_bundle.assets[0].name}</h4>\r\n                    <p>\r\n                      Minted Date:{\" \"}\r\n                      {order.maker_asset_bundle.assets[0].created_date}\r\n                    </p>\r\n                    {/* Display other order details as needed */}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <p>No OpenSea NFTs found</p>\r\n            )}\r\n\r\n            {/* Display Magic Eden NFTs */}\r\n            {nftData.magicEdenData && nftData.magicEdenData.length > 0 ? (\r\n              <div>\r\n                <h3 className=\"md:text-xl font-bold\">Magic Eden Listings</h3>\r\n                {nftData.magicEdenData.map((listing) => (\r\n                  <div key={listing.id} className=\"nft-item mb-5\">\r\n                    <h4>NFT Name: {listing.name}</h4>\r\n                    {/* Display other listing details as needed */}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <p>No Magic Eden NFTs found</p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}